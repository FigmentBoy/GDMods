;Sizes
CCLayerColor = 0x1f0

;Virtuals
CCDirector:
	[rax+0xa0] = getTouchDispatcher()
CCNode:
	[rax+0x130] = setContentSize(const CCSize&)
	[rax+0x1c0] = addChild(cocos2d::CCNode*, int)
	[rax+0x80] = setScaleX(float)
	[rax+0xb8] = setPosition(cocos2d::CCPoint)
	[rax+0xc0] = getPosition()
	[rax+0xa0] = setScale(float)
	[rax+0x148] = setVisible(bool)
	[rax+0x158] = setRotation(float)
GJBaseGameLayer:
	[rax+0x480] = addToSection(GameObject*)

FLAlertLayer:
	[rax+0x3c0] = registerWithTouchDispatcher(int)
	[rax+0x4e0] = show()
GameObject:
	[rax+0x4c0] = customSetup()
	[rax+0x4e0] = triggerObject()
	[rax+0x4f8] = getObjectRect()
	[rax+0x518] = getRealPosition()
	[rax+0x520] = setStartPos(CCPoint)
	[rax+0x528] = getStartPos()
	[rax+0x580] = triggerActivated()
	[rax+0x5e8] = getType()
	[rax+0x5a8] = getOrientedBox()
	[rax+0x560] = setRScale(float)
CCLayer:
	[rax+0x408] = setKeypadEnabled(bool)
	[rax+0x3c0] = setTouchEnabled(bool)
CCLayerColor:
	[rax+0x458] = setOpacity(unsigned char)
CCScale9Sprite:
	[rax+0x130] = setContentSize(CCSize)
	[rax+0x368] = setOpacity
	[rax+0x398] = setColor
; variables

CCNode: ? - 0x120
	[rdi+0x24] = rotation
	[rdi+0x28] = rotation but its visual
GameManager:
	[rdi+0x180] = PlayLayer instance
	[rdi+0x188] = LevelEditorLayer
	[rdi+0x1c0] = username
	[rdi+0x1f4] = scene number
	[rdi+0x2a1] = ldm

FLAlertLayer: 0x250

	[rdi+0x220] = main layer

CCMenuItemSpriteExtra:
	[rdi+0x178] = button is selectable
CCSpritePlus: 0x238 - 0x250
	[rdi+0x238] = followers list
	[rdi+0x240] = following sprite
	[rdi+0x248] = 
	[rdi+0x249] = 
	[rdi+0x24a] = 
	;64-bit pad to 0x250

DialogObject(CCObject): 
	[rdi+0x28] = text std::string

GameObject(CCSpritePlus): 0x250 - 0x4f0
	[rdi+0x250] = float (UNKNOWN) animation related
	[rdi+0x254] = float (UNKNOWN) animation related
	[rdi+0x258] = float (UNKNOWN) animation related
	[rdi+0x25c] = float (UNKNOWN) animation related
	[rdi+0x268] = is animated circle
	[rdi+0x269] = randomize start of animation
	[rdi+0x26c] = animation speed
	[rdi+0x279] = in editor mode
	[rdi+0x2b0] = OBB2D instance
	[rdi+0x2b8] = uses oriented box (MAYBE)
	[rdi+0x338] = linked group
	[rdi+0x340] = custom rotation speed
	[rdi+0x344] = disable rotation
	[rdi+0x350] = CCSprite of sorts

	[rdi+0x35c] = hitbox
	[rdi+0x36c] = unique identifier
	[rdi+0x370] = object type
	[rdi+0x378] = touch triggered
	[rdi+0x379] = spawn triggered
	[rdi+0x391] = object is unloaded (MAYBE)
	[rdi+0x394] = rotation
	[rdi+0x3a0] = flipped horizontal
	[rdi+0x3a1] = flipped vertical
	[rdi+0x3b8] = disable glow
	[rdi+0x3bc] = color id
	[rdi+0x3c0] = object size
	[rdi+0x3c4] = Object ID
	[rdi+0x3cf] = dont enter
	[rdi+0x3d0] = dont fade
	[rdi+0x3d4] = UNKNOWN
	[rdi+0x3e8] = secret coin id
	[rdi+0x3f8] = slope is going uphill
	[rdi+0x410] = GJSpriteColor instance
	[rdi+0x428] = Z layer
	[rdi+0x42c] = Z order
	[rdi+0x438] = portal checked
	[rdi+0x450] = is group parent
	[rdi+0x458] = pointer to an array of Group IDS
	[rdi+0x460] = How Many Group IDS
	[rdi+0x484] = editor layer 1
	[rdi+0x488] = editor layer 2
	[rdi+0x4c0] = High Detail
	[rdi+0x4ec] = multi activate

GJEffectManager:
	[rdi+0x120] = game base layer
	[rdi+0x178] = CCArray of collision triggers
	[rdi+0x1c18] = list of spawn actions

SpawnTriggerAction:
	[rdi+0x120] = timer ended
	[rdi+0x124] = spawn delay
	[rdi+0x128] = spawn timer
	[rdi+0x12c] = group id
	[rdi+0x130] = uuid
EffectGameObject:
	[rdi+0x4ed] = color
	[rdi+0x4f0] = duration
	[rdi+0x4f4] = opacity
	[rdi+0x4f8] = targeted group id
	[rdi+0x4fc] = second group id
	[rdi+0x500] = shake strength
	[rdi+0x504] = shake interval
	[rdi+0x508] = tint ground
	[rdi+0x50b] = blending enabled
	[rdi+0x514] = easing type
	[rdi+0x518] = easing amount
	[rdi+0x524] = rotate trigger degrees
	[rdi+0x52c] = lock object rotation
	[rdi+0x528] = rotate trigger times 360
	[rdi+0x530] = follow x mod
	[rdi+0x534] = follow y mod
	[rdi+0x53c] = follow player y speed
	[rdi+0x540] = follow player y delay
	[rdi+0x544] = follow player y offset
	[rdi+0x54c] = pulse fade in
	[rdi+0x548] = follow player y max speed
	[rdi+0x550] = pulse hold
	[rdi+0x554] = pulse fade out
	[rdi+0x558] = pulse mode (int, color or hsv)
	[rdi+0x55c] = pulse target (int, channel or group)
	[rdi+0x560] = hsv data (3 floats)
	[rdi+0x570] = channel id
	[rdi+0x574] = copy opacity
	[rdi+0x575] = pulse main only
	[rdi+0x576] = pulse detail only
	[rdi+0x577] = pulse exclusive
	[rdi+0x578] = flag for toggle on
	[rdi+0x57c] = touch trigger toggle on
	[rdi+0x579] = touch trigger hold mode
	[rdi+0x580] = touch trigger dual mode
	[rdi+0x584] = animation id
	[rdi+0x588] = spawn delay (float)
	[rdi+0x598] = target count
	[rdi+0x5a0] = compare type
	[rdi+0x5a4] = count multi activate
	[rdi+0x5a5] = collision trigger on exit
	[rdi+0x5a8] = block b id
	[rdi+0x5b0] = item id
	[rdi+0x5b4] = collectible mode (1 = pickup, 2 = toggle)
TeleportPortalObject:
	[rdi+0x4f8] = teleport portal destination object
	[rdi+0x504] = teleport portal Y
GJBaseGameLayer: 0x170
	[rdi+0x170] = vtable stuff
	[rdi+0x178] = OBB2D instance
	[rdi+0x180] = GJEffectManager instance
	[rdi+0x188] = CCLayer that objects are drawn to
	[rdi+0x190 to rdi+0x378] = batch nodes, see research_batchnodes.cpp

	[rdi+0x380] = PlayerObject 1
	[rdi+0x388] = PlayerObject 2
	[rdi+0x390] = LevelSettingsObject instance
	[rdi+0x398] = CCDictionary for deprecated function (unused)
	[rdi+0x3a0] = CCArray of GameObject instances
	[rdi+0x3a8] = CCArray of sections
	[rdi+0x3b0] = CCArray of something

	[rdi+0x489] = dual mode
	[rdi+0x48c] = enter/exit effect type

	[rdi+0x4b0] = CCCircleWaveDelegate vtable
	[rdi+0x4b8] = CurrencyRewardDelegate vtable

CCCIrcleWave:
	[rdi+0x134] = color
	[rdi+0x150] = delegate

CCTextInputNode (CCLayer): 0x170 - 0x1e8
	[rdi+0x170] = vtable
	[rdi+0x178] = also vtable
	[rdi+0x188] = placeholder text std::string
	[rdi+0x194] = enabled
	[rdi+0x198] = allowed chars std::string
	[rdi+0x1a0] = max label width (float)
	[rdi+0x1a4] = max label scale (float)
	[rdi+0x1a8] = label placeholder scale (float)
	[rdi+0x1ac] = label placeholder color 3b
	[rdi+0x1c0] = CCTextFieldTTF instance
	[rdi+0x1c8] = text input delegate
PlayLayer (GJBaseGameLayer): 0x4d0
	[rdi+0x4dd] = camera should be smooth
	[rdi+0x4e0] = camera smoothness (MAYBE)
	[rdi+0x4fc] = ground restriction height
	[rdi+0x500] = ceiling restriction height
	[rdi+0x530] = end portal object
	[rdi+0x538] = some sort of CCArray. Unknown
	[rdi+0x550] = array of queued surfaces
	[rdi+0x568] = array of queued hazards
	[rdi+0x598] = CCParticleSystem instance
	[rdi+0x5b8] = AudioEffectsLayer instance
	[rdi+0x5c8] = GJGroundLayer instance
	[rdi+0x5d0] = another GJGroundLayer instance
	[rdi+0x5f8] = level length (float)
	[rdi+0x5fc] = true level length
	[rdi+0x660] = CCNode instance
	[rdi+0x700] = collisions disabled
	[rdi+0x708] = latest vehicle object
	[rdi+0x710] = dual mode object
	[rdi+0x71c] = Level flip
	[rdi+0x720] = UILayer instance
	[rdi+0x728] = GJGameLevel instance
	[rdi+0x734] = camera y (float)
	[rdi+0x738] = testmode boolean
	[rdi+0x739] = practice mode boolean
	[rdi+0x754] = attempt number
	[rdi+0x760] = time

PlayerObject (GameObject): 0x4f0 - 0xb30
	[rdi+0x518 and rdi+0x520] = some ccdictionaries, unknown purpose
	[rdi+0x560] = object uuid being collided with
	[rdi+0x569] = is on slope (but inversed. false = on slope?????)
	[rdi+0x570] = gameobject instance of collided object (but only for slopes) (this is really fucking stupid)
	[rdi+0x584] = uuid of collided object (but only for slopes)
	[rdi+0x588] = going downhill on slope
	[rdi+0x5a8 to rdi+0x5f0] = 9 CCSprites
	[rdi+0x5f8] = CCMotionStreak instance
	[rdi+0x600] = HardStreak instance
	[rdi+0x608] = player speed
	[rdi+0x610] = jump power
	[rdi+0x618] = gravity (0.958199)
	[rdi+0x629] = unnamed, but its modified in resetObjet and determines circle waves
	[rdi+0x62b] = no clue but could be "has jumped"
	[rdi+0x62c] = is in play layer
	[rdi+0x62f] = sliding particles go on the bottom
	[rdi+0x630] = is about to set checkpoint
	[rdi+0x640] = time since last jump (MAYBE)
	[rdi+0x674] = deceleration rate
	[rdi+0x688] = has just hit ring
	[rdi+0x6a8] = GJRobotSprite
	[rdi+0x6b0] = GJSpiderSprite
	[rdi+0x6c0 to rdi+0x708] = 9 CCParticleSystemQuad instances
	[rdi+0x724] = slope rotation
	[rdi+0x732] = has hit portal
	[rdi+0x745] = hold flag
	[rdi+0x746] = has hold in queue flag
	[rdi+0x747] = also hold flag??
	[rdi+0x748] = has hold in queue as well???
	[rdi+0x749] = i give up, "can hit custom ring"
	[rdi+0x758] = robot can jump
	[rdi+0x760] = y acceleration
	[rdi+0x768] = is on slope (MAYBE)
	[rdi+0x769] = is on slope v2 (MAYBE)
	[rdi+0x76c] = slope rotation (double)
	[rdi+0x76f] = is cube
	[rdi+0x770] = is ship
	[rdi+0x771] = is ufo
	[rdi+0x772] = is ball
	[rdi+0x773] = is wave
	[rdi+0x774] = is robot
	[rdi+0x775] = is spider

	[rdi+0x776] = is upside down
	[rdi+0x777] = is dead

	[rdi+0x778] = is on ground
	[rdi+0x779] = is dashing
	[rdi+0x77c] = vehicle size (1.0 for normal 0.6 for small)
	[rdi+0x780] = multiplier player speed
	[rdi+0x78c] = last touched portal location
	[rdi+0x798] = something layer
	[rdi+0x7a0] = player is sliding
	[rdi+0x7a1] = player is rising
	[rdi+0x7a4] = ccpoint of when last hit ground
	[rdi+0x7b0] = CCArray of untouched rings

	[rdi+0x7b8] = last touched portal object

	[rdi+0x7c2] = player color 1
	[rdi+0x7c5] = player color 2

	[rdi+0x7c8] = CCPoint of player
		[rdi+0x7c8] = x position
		[rdi+0x7cc] = y position

	[rdi+0x7d8] = time (frame/fps)
	[rdi+0x7e0] = has respawned
	[rdi+0x7e8] = ground height (MAYBE)

CheckpointObject (CCNode):
	[rdi+0x128] = PlayerCheckpoint instance

EditButtonBar:
	[rdi+0x130] = array of CCMenuItemSpriteExtra instances, object buttons
EditorUI:
	[rdi+0x260] = array of objects
	[rdi+0x2f8] = edit object menu item sprite
	[rdi+0x3e0] = some sort of boolean
	[rdi+0x358] = array of EditButtonBar objects

GameStatsManager:
	[rdi+0x218] = CCDictionary of unlocked items

LevelSettingsObject:
	[rdi+0x120] = GJEffectManager instance
	[rdi+0x144] = font type
	[rdi+0x149] = whether upside down
	[rdi+0x131] = whether dual
	[rdi+0x150] = GJGameLevel instance

GJGameLevel:
	[rdi+0x138] = std string of level name
    [rdi+0xf8] = levelid
    [rdi+0x148] = level string std::string
    [rdi+0x150] = std string of level author name
    [rdi+0x1b0] = difficulty
    [rdi+0x1c5] = low detail mode
    [rdi+0x324] = official level

AccountManager:
	[rdi+0x128] = password
	[rdi+0x130] = username

ShareCommentLayer (FLAlertLayer):
	[rdi+0x26c] = unknown
	[rdi+0x268] = char limit
	[rdi+0x270] = comment type

CCAnimatedSprite:
	[rdi+0x248] = animation manager
