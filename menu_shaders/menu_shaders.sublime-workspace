{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"CMAKE_",
				"CMAKE_CXX_FLAGS"
			],
			[
				"url",
				"urlWithString"
			],
			[
				"__att",
				"__attribute__((constructor"
			],
			[
				"CACAO_",
				"CACAO_IOS_BUNDLE"
			],
			[
				"CMAKE_CXX_",
				"CMAKE_CXX_FLAGS"
			],
			[
				"return_",
				"return_value2"
			],
			[
				"to_value",
				"to_value(contexts, globals, info.clone(), true)?;"
			],
			[
				"initial",
				"initial_storage"
			],
			[
				"store_",
				"store_const_value"
			],
			[
				"Local",
				"LocalIntern<String>"
			],
			[
				"batter",
				"batteryLevel"
			],
			[
				"dispatch_get_global_queue",
				"dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT"
			],
			[
				"threa",
				"mainthread"
			],
			[
				"CoreFoundation",
				"CoreFoundation/CoreFoundation.h>"
			],
			[
				"to_ex",
				"to_expression()"
			],
			[
				"GJB",
				"GJBaseGameLayer* self"
			],
			[
				"shoul",
				"shouldExitHackedLevel"
			],
			[
				"getConten",
				"getContentSize().height/2"
			],
			[
				"PlayerO",
				"PlayerObject* p, GJBaseGameLayer* l"
			],
			[
				"onCollisio",
				"onCollision(const char*"
			],
			[
				"m_uPixels",
				"m_uPixelsHigh"
			],
			[
				"addSingle",
				"addSingleSpriteFrame"
			],
			[
				"parent",
				"parentForZLayer"
			],
			[
				"kCCDic",
				"kCCDictStr"
			],
			[
				"kCCDi",
				"kCCDictInt"
			],
			[
				"removeAll",
				"removeAllObjects"
			],
			[
				"setPosition",
				"setPosition(i->getPosition());"
			],
			[
				"removeFromParent",
				"removeFromParentAndCleanup"
			],
			[
				"removeMeAn",
				"removeMeAndCleanup"
			],
			[
				"CCParti",
				"CCParticleSystemQuad"
			],
			[
				"kDebugPrint",
				"kDebugPrintText"
			],
			[
				"collect",
				"collect::<Vec<_>>"
			],
			[
				"GJBase",
				"GJBaseGameLayer"
			],
			[
				"Obj",
				"ObjectManager"
			],
			[
				"Object",
				"ObjectManager"
			],
			[
				"kGameObjectTypeNormal",
				"kGameObjectTypeNormalGravityPortal"
			],
			[
				"kGameObjectTypeRegularS",
				"kGameObjectTypeRegularSizePortal"
			],
			[
				"kGameObjectTypeMiniS",
				"kGameObjectTypeMiniSizePortal"
			],
			[
				"m_nObject",
				"m_nObjectID"
			],
			[
				"ObjectManager",
				"ObjectManager::hooks::"
			],
			[
				"GJ_GameS",
				"GJ_GameSheet02-uhd.png"
			],
			[
				"sharedSprite",
				"sharedSpriteFrameCache()->"
			],
			[
				"setDisplay",
				"setDisplayFrame"
			],
			[
				"17",
				"1751"
			],
			[
				"m_up",
				"m_upsideDown"
			],
			[
				"prtn",
				"printf"
			],
			[
				"CCCircle",
				"CCCircleWaveDelegate"
			],
			[
				"ccColo",
				"ccColor3B"
			],
			[
				"m_portal",
				"m_portalCircle"
			],
			[
				"type_i",
				"type_id_t"
			],
			[
				"CacBase",
				"CacBaseTester"
			],
			[
				"CacB",
				"CacBaseTest"
			],
			[
				"COLLISION",
				"COLLISION_BLOCK_B_ID"
			],
			[
				"MULTI_",
				"COUNT_MULTI_ACTIVATE"
			],
			[
				"TOUCH",
				"TOUCH_DUAL_MODE"
			],
			[
				"SHAKE",
				"SHAKE_INTERVAL"
			],
			[
				"FOLLOW",
				"FOLLOW_PLAYER_Y_OFFSET"
			],
			[
				"FOLLOW_PLA",
				"FOLLOW_PLAYER_Y_MAX_SPEED"
			],
			[
				"FOLLOW_",
				"FOLLOW_PLAYER_Y_DELAY"
			],
			[
				"PULSE",
				"PULSE_DETAIL_ONLY"
			],
			[
				"PULSE_FADE",
				"PULSE_FADE_OUT"
			],
			[
				"PULSE_",
				"PULSE_FADE_IN"
			],
			[
				"MOVE",
				"MOVE_LOCK_TO_PLAYER_Y"
			],
			[
				"MOVE_TRIGGER_",
				"MOVE_TRIGGER_9_UNITS"
			],
			[
				"ROTATION",
				"ROTATION_TIMES_360"
			],
			[
				"ROTAT",
				"ROTATION_DEGREES"
			],
			[
				"RO",
				"ROTATION_LOCK"
			],
			[
				"COPIED_COL",
				"COPIED_COLOR_HSV_VALUES"
			],
			[
				"COPY",
				"COPIED_COLOR_OPACITY"
			],
			[
				"PLAYER",
				"PLAYER_COLOR_2"
			],
			[
				"ROTA",
				"ROTATION_LOCK"
			],
			[
				"PUSING_ANIM",
				"PULSING_ANIMATION_RANDOMIZE"
			],
			[
				"remove",
				"remove                            - [#int#]remove(<#const char *#>)"
			],
			[
				"gl",
				"lol_gl_parsing_this"
			],
			[
				"TRIGGER_HA",
				"TRIGGER_SHAKE"
			],
			[
				"TRIGGER_FOLLO",
				"TRIGGER_FOLLOW_Y"
			],
			[
				"ZLA",
				"ZLayerType"
			],
			[
				"_",
				"_ObjAddPackform"
			],
			[
				"parse_",
				"parse_objadd        - [#bool#]parse_objadd(<#std::string packet#>, <#ObjAddPacket &ret#>)"
			],
			[
				"differen",
				"selection_differences"
			],
			[
				"set_intersectio",
				"set_intersection                  - [#_OutputIterator#]set_intersection(<#_InputIterator1 __first1#>, <#_InputIterator1 __last1#>, <#_InputIterator2 __first2#>, <#_InputIterator2 __last2#>, <#_OutputIterator __result#>)"
			],
			[
				"update",
				"update_members"
			],
			[
				"se",
				"send"
			],
			[
				"inclu",
				"include_directories"
			],
			[
				"bezier",
				"bezierSpacing"
			],
			[
				"bezierSpacing",
				"nextBezierSpacing"
			],
			[
				"m_bezier",
				"m_bezierDrawer"
			],
			[
				"k",
				"kControlPointRadius"
			],
			[
				"m_current",
				"m_currentTouch"
			],
			[
				"m_curre",
				"m_currentTouch"
			],
			[
				"m_duration",
				"m_durationSlider"
			],
			[
				"CC",
				"CCNode"
			],
			[
				"m_follow",
				"m_followingSprite"
			],
			[
				"CCMenuItem",
				"CCMenuItemSpriteExtra"
			],
			[
				"create",
				"createWithSpriteFrameName"
			],
			[
				"split",
				"split-string\tsplitString"
			],
			[
				"stat",
				"staticmethod"
			],
			[
				"add",
				"add_executable\tbuiltin"
			],
			[
				"un",
				"unimplemented\tunimplemented!(â€¦)"
			],
			[
				"idain_Fn",
				"idain_Fn_flq_i"
			],
			[
				"spri",
				"split-string\tsplitString"
			],
			[
				"inc",
				"I-ios\tinc"
			],
			[
				"main",
				"mainthread\tObjCThreads"
			],
			[
				"in",
				"includes\tfunc"
			],
			[
				"v",
				"I-valarray\tinc"
			],
			[
				"fin",
				"fill_n\tfunc"
			],
			[
				"find",
				"find_if\tfunc"
			],
			[
				"oper",
				"operator=\tfunc"
			],
			[
				"CHK",
				"CHK_MAKE"
			],
			[
				"previous",
				"previous_no_ignore"
			]
		]
	},
	"buffers":
	[
		{
			"file": "main.mm",
			"settings":
			{
				"buffer_size": 12778,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"insert",
					{
						"characters": "init"
					},
					"BQAAAFkAAAAAAAAAWgAAAAAAAAAAAAAAWgAAAAAAAABaAAAAAAAAAAsAAABvbk1vcmVHYW1lc1oAAAAAAAAAWwAAAAAAAAAAAAAAWwAAAAAAAABcAAAAAAAAAAAAAABcAAAAAAAAAF0AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABkAAAAAAAAAFkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					5,
					4,
					"left_delete",
					null,
					"BAAAAFcAAAAAAAAAVwAAAAAAAAABAAAAZFYAAAAAAAAAVgAAAAAAAAABAAAAaVUAAAAAAAAAVQAAAAAAAAABAAAAb1QAAAAAAAAAVAAAAAAAAAABAAAAdg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABYAAAAAAAAAFgAAAAAAAAAAAAAAAAA8L8"
				],
				[
					6,
					1,
					"insert",
					{
						"characters": "bool"
					},
					"BAAAAFQAAAAAAAAAVQAAAAAAAAAAAAAAVQAAAAAAAABWAAAAAAAAAAAAAABWAAAAAAAAAFcAAAAAAAAAAAAAAFcAAAAAAAAAWAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABUAAAAAAAAAFQAAAAAAAAAAAAAAAAA8L8"
				],
				[
					10,
					2,
					"left_delete",
					null,
					"AgAAAF8AAAAAAAAAXwAAAAAAAAAUAAAAb2NvczJkOjpDQ09iamVjdCogb2JeAAAAAAAAAF4AAAAAAAAAAQAAAGM",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABzAAAAAAAAAF8AAAAAAAAAAAAAAAAA8L8"
				],
				[
					13,
					1,
					"paste_edit",
					null,
					"AQAAADUAAAAAAAAAhgAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA1AAAAAAAAADUAAAAAAAAAAAAAAAAA8L8"
				],
				[
					14,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAIYAAAAAAAAAhwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACGAAAAAAAAAIYAAAAAAAAAAAAAAAAA8L8"
				],
				[
					17,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAADQAAAAAAAAANQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA0AAAAAAAAADQAAAAAAAAAAAAAAAAA8L8"
				],
				[
					20,
					1,
					"paste_and_indent",
					null,
					"AgAAALUAAAAAAAAAzQ8AAAAAAAAAAAAAzQ8AAAAAAADNDwAAAAAAAEgAAAAJCUZMQWxlcnRMYXllcjo6Y3JlYXRlKCJDYWNhbyIsICJIZWxsbyBmcm9tIGN1c3RvbSBtb2QhIiwgIk9LIiktPnNob3coKTs",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD9AAAAAAAAALUAAAAAAAAAAAAAAAAA8L8"
				],
				[
					23,
					4,
					"left_delete",
					null,
					"BAAAAMYAAAAAAAAAxgAAAAAAAAABAAAAOsUAAAAAAAAAxQAAAAAAAAABAAAAOsQAAAAAAAAAxAAAAAAAAAABAAAAZMMAAAAAAAAAwwAAAAAAAAABAAAAZw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADHAAAAAAAAAMcAAAAAAAAAAAAAAAAA8L8"
				],
				[
					26,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAAYCAAAAAAAABwIAAAAAAAAAAAAABwIAAAAAAAAIAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAGAgAAAAAAAAYCAAAAAAAAAAAAAAAA8L8"
				],
				[
					29,
					1,
					"insert",
					{
						"characters": "$"
					},
					"AQAAAHsCAAAAAAAAfAIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB7AgAAAAAAAHsCAAAAAAAAAAAAAAAA8L8"
				],
				[
					33,
					1,
					"left_delete",
					null,
					"AQAAAIUCAAAAAAAAhQIAAAAAAAABAAAAXw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACGAgAAAAAAAIYCAAAAAAAAAAAAAAAA8L8"
				],
				[
					34,
					1,
					"insert",
					{
						"characters": "::"
					},
					"AgAAAIUCAAAAAAAAhgIAAAAAAAAAAAAAhgIAAAAAAACHAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACFAgAAAAAAAIUCAAAAAAAAAAAAAAAA8L8"
				],
				[
					37,
					1,
					"left_delete",
					null,
					"AQAAAIwCAAAAAAAAjAIAAAAAAAAEAAAAc2VsZg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACQAgAAAAAAAIwCAAAAAAAAAAAAAAAA8L8"
				],
				[
					40,
					1,
					"left_delete",
					null,
					"AQAAACQDAAAAAAAAJAMAAAAAAAAGAAAAc2VsZi0+",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAqAwAAAAAAACQDAAAAAAAAAAAAAAAA8L8"
				],
				[
					45,
					1,
					"paste_edit",
					null,
					"AgAAAKoEAAAAAAAAqgQAAAAAAAAjAAAAc3RkOjpmaWxlc3lzdGVtOjpleGlzdHMoc2hhZGVyUGF0aCmqBAAAAAAAAL8EAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADNBAAAAAAAAKoEAAAAAAAAAAAAAAAA8L8"
				],
				[
					48,
					1,
					"insert",
					{
						"characters": "shaderPath.c_st"
					},
					"EAAAALIEAAAAAAAAswQAAAAAAAAAAAAAswQAAAAAAACzBAAAAAAAAAUAAABmbmFtZbMEAAAAAAAAtAQAAAAAAAAAAAAAtAQAAAAAAAC1BAAAAAAAAAAAAAC1BAAAAAAAALYEAAAAAAAAAAAAALYEAAAAAAAAtwQAAAAAAAAAAAAAtwQAAAAAAAC4BAAAAAAAAAAAAAC4BAAAAAAAALkEAAAAAAAAAAAAALkEAAAAAAAAugQAAAAAAAAAAAAAugQAAAAAAAC7BAAAAAAAAAAAAAC7BAAAAAAAALwEAAAAAAAAAAAAALwEAAAAAAAAvQQAAAAAAAAAAAAAvQQAAAAAAAC+BAAAAAAAAAAAAAC+BAAAAAAAAL8EAAAAAAAAAAAAAL8EAAAAAAAAwAQAAAAAAAAAAAAAwAQAAAAAAADBBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC3BAAAAAAAALIEAAAAAAAAAAAAAAAA8L8"
				],
				[
					49,
					1,
					"insert",
					{
						"characters": "r()"
					},
					"AwAAAMEEAAAAAAAAwgQAAAAAAAAAAAAAwgQAAAAAAADDBAAAAAAAAAAAAADDBAAAAAAAAMQEAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADBBAAAAAAAAMEEAAAAAAAAAAAAAAAA8L8"
				],
				[
					52,
					1,
					"insert",
					{
						"characters": " =="
					},
					"AwAAAMwEAAAAAAAAzQQAAAAAAAAAAAAAzQQAAAAAAADOBAAAAAAAAAAAAADOBAAAAAAAAM8EAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADMBAAAAAAAAMwEAAAAAAAAAAAAAAAA8L8"
				],
				[
					53,
					1,
					"insert",
					{
						"characters": " 0"
					},
					"AgAAAM8EAAAAAAAA0AQAAAAAAAAAAAAA0AQAAAAAAADRBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADPBAAAAAAAAM8EAAAAAAAAAAAAAAAA8L8"
				],
				[
					58,
					1,
					"left_delete",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAjAAAAI2RlZmluZSBQUk9KRUNUX05BTUUgIm1lbnVfc2hhZGVycyI",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAjAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					60,
					1,
					"left_delete",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAABAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAA"
				],
				[
					63,
					1,
					"left_delete",
					null,
					"AQAAAMoAAAAAAAAAygAAAAAAAAAHAAAARGVmYXVsdA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADRAAAAAAAAAMoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					66,
					1,
					"left_delete",
					null,
					"AQAAANkAAAAAAAAA2QAAAAAAAAAGAAAALCB0cnVl",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADfAAAAAAAAANkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					70,
					1,
					"insert",
					{
						"characters": "using"
					},
					"BQAAABEAAAAAAAAAEgAAAAAAAAAAAAAAEgAAAAAAAAATAAAAAAAAAAAAAAATAAAAAAAAABQAAAAAAAAAAAAAABQAAAAAAAAAFQAAAAAAAAAAAAAAFQAAAAAAAAAWAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAARAAAAAAAAABEAAAAAAAAAAAAAAAAA8L8"
				],
				[
					71,
					1,
					"insert",
					{
						"characters": " namespace"
					},
					"CgAAABYAAAAAAAAAFwAAAAAAAAAAAAAAFwAAAAAAAAAYAAAAAAAAAAAAAAAYAAAAAAAAABkAAAAAAAAAAAAAABkAAAAAAAAAGgAAAAAAAAAAAAAAGgAAAAAAAAAbAAAAAAAAAAAAAAAbAAAAAAAAABwAAAAAAAAAAAAAABwAAAAAAAAAHQAAAAAAAAAAAAAAHQAAAAAAAAAeAAAAAAAAAAAAAAAeAAAAAAAAAB8AAAAAAAAAAAAAAB8AAAAAAAAAIAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAWAAAAAAAAABYAAAAAAAAAAAAAAAAA8L8"
				],
				[
					72,
					1,
					"insert",
					{
						"characters": " cocos2d:"
					},
					"CQAAACAAAAAAAAAAIQAAAAAAAAAAAAAAIQAAAAAAAAAiAAAAAAAAAAAAAAAiAAAAAAAAACMAAAAAAAAAAAAAACMAAAAAAAAAJAAAAAAAAAAAAAAAJAAAAAAAAAAlAAAAAAAAAAAAAAAlAAAAAAAAACYAAAAAAAAAAAAAACYAAAAAAAAAJwAAAAAAAAAAAAAAJwAAAAAAAAAoAAAAAAAAAAAAAAAoAAAAAAAAACkAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAgAAAAAAAAACAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					73,
					1,
					"left_delete",
					null,
					"AQAAACgAAAAAAAAAKAAAAAAAAAABAAAAOg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAApAAAAAAAAACkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					74,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAACgAAAAAAAAAKQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAoAAAAAAAAACgAAAAAAAAAAAAAAAAA8L8"
				],
				[
					75,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAACkAAAAAAAAAKgAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAApAAAAAAAAACkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					76,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAACoAAAAAAAAAKwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAqAAAAAAAAACoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					77,
					1,
					"paste_edit",
					null,
					"AQAAACsAAAAAAAAATgAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAArAAAAAAAAACsAAAAAAAAAAAAAAAAA8L8"
				],
				[
					78,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAE4AAAAAAAAATwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABOAAAAAAAAAE4AAAAAAAAAAAAAAAAA8L8"
				],
				[
					81,
					1,
					"insert",
					{
						"characters": "std::string("
					},
					"DAAAAL8EAAAAAAAAwAQAAAAAAAAAAAAAwAQAAAAAAADBBAAAAAAAAAAAAADBBAAAAAAAAMIEAAAAAAAAAAAAAMIEAAAAAAAAwwQAAAAAAAAAAAAAwwQAAAAAAADEBAAAAAAAAAAAAADEBAAAAAAAAMUEAAAAAAAAAAAAAMUEAAAAAAAAxgQAAAAAAAAAAAAAxgQAAAAAAADHBAAAAAAAAAAAAADHBAAAAAAAAMgEAAAAAAAAAAAAAMgEAAAAAAAAyQQAAAAAAAAAAAAAyQQAAAAAAADKBAAAAAAAAAAAAADKBAAAAAAAAMsEAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC/BAAAAAAAAL8EAAAAAAAAAAAAAAAA8L8"
				],
				[
					84,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAANUEAAAAAAAA1gQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADVBAAAAAAAANUEAAAAAAAAAAAAAAAA8L8"
				],
				[
					87,
					1,
					"insert",
					{
						"characters": "\n<f"
					},
					"AwAAABAAAAAAAAAAEQAAAAAAAAAAAAAAEQAAAAAAAAASAAAAAAAAAAAAAAASAAAAAAAAABMAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAQAAAAAAAAABAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					88,
					1,
					"insert",
					{
						"characters": "stream>"
					},
					"BwAAABMAAAAAAAAAFAAAAAAAAAAAAAAAFAAAAAAAAAAVAAAAAAAAAAAAAAAVAAAAAAAAABYAAAAAAAAAAAAAABYAAAAAAAAAFwAAAAAAAAAAAAAAFwAAAAAAAAAYAAAAAAAAAAAAAAAYAAAAAAAAABkAAAAAAAAAAAAAABkAAAAAAAAAGgAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAATAAAAAAAAABMAAAAAAAAAAAAAAAAA8L8"
				],
				[
					89,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABoAAAAAAAAAGwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAaAAAAAAAAABoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					90,
					1,
					"left_delete",
					null,
					"AQAAABoAAAAAAAAAGgAAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAbAAAAAAAAABsAAAAAAAAAAAAAAAAA8L8"
				],
				[
					91,
					1,
					"insert",
					{
						"characters": "\n<"
					},
					"AgAAABoAAAAAAAAAGwAAAAAAAAAAAAAAGwAAAAAAAAAcAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAaAAAAAAAAABoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					92,
					1,
					"insert",
					{
						"characters": "unistd.h>"
					},
					"CQAAABwAAAAAAAAAHQAAAAAAAAAAAAAAHQAAAAAAAAAeAAAAAAAAAAAAAAAeAAAAAAAAAB8AAAAAAAAAAAAAAB8AAAAAAAAAIAAAAAAAAAAAAAAAIAAAAAAAAAAhAAAAAAAAAAAAAAAhAAAAAAAAACIAAAAAAAAAAAAAACIAAAAAAAAAIwAAAAAAAAAAAAAAIwAAAAAAAAAkAAAAAAAAAAAAAAAkAAAAAAAAACUAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAcAAAAAAAAABwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					95,
					1,
					"insert",
					{
						"characters": "#include"
					},
					"CAAAABEAAAAAAAAAEgAAAAAAAAAAAAAAEgAAAAAAAAATAAAAAAAAAAAAAAATAAAAAAAAABQAAAAAAAAAAAAAABQAAAAAAAAAFQAAAAAAAAAAAAAAFQAAAAAAAAAWAAAAAAAAAAAAAAAWAAAAAAAAABcAAAAAAAAAAAAAABcAAAAAAAAAGAAAAAAAAAAAAAAAGAAAAAAAAAAZAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAARAAAAAAAAABEAAAAAAAAAAAAAAAAA8L8"
				],
				[
					96,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABkAAAAAAAAAGgAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAZAAAAAAAAABkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					100,
					1,
					"insert",
					{
						"characters": "#include"
					},
					"CAAAACQAAAAAAAAAJQAAAAAAAAAAAAAAJQAAAAAAAAAmAAAAAAAAAAAAAAAmAAAAAAAAACcAAAAAAAAAAAAAACcAAAAAAAAAKAAAAAAAAAAAAAAAKAAAAAAAAAApAAAAAAAAAAAAAAApAAAAAAAAACoAAAAAAAAAAAAAACoAAAAAAAAAKwAAAAAAAAAAAAAAKwAAAAAAAAAsAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAkAAAAAAAAACQAAAAAAAAAAAAAAAAA8L8"
				],
				[
					101,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACwAAAAAAAAALQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAsAAAAAAAAACwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					104,
					1,
					"left_delete",
					null,
					"AQAAAIcPAAAAAAAAhw8AAAAAAAAGAAAAc2VsZi0+",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACNDwAAAAAAAIcPAAAAAAAAAAAAAAAA8L8"
				],
				[
					107,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAMkAAAAAAAAAygAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADJAAAAAAAAAMkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					108,
					1,
					"paste_edit",
					null,
					"AQAAAMoAAAAAAAAAsCIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADKAAAAAAAAAMoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					109,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAALAiAAAAAAAAsSIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACwIgAAAAAAALAiAAAAAAAAAAAAAAAA8L8"
				],
				[
					112,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAADcAAAAAAAAAOAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA3AAAAAAAAADcAAAAAAAAAAAAAAAAA8L8"
				],
				[
					113,
					1,
					"paste_edit",
					null,
					"AQAAADgAAAAAAAAASwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA4AAAAAAAAADgAAAAAAAAAAAAAAAAA8L8"
				],
				[
					114,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAEsAAAAAAAAATAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABLAAAAAAAAAEsAAAAAAAAAAAAAAAAA8L8"
				],
				[
					119,
					1,
					"left_delete",
					null,
					"AQAAACUGAAAAAAAAJQYAAAAAAAAeAgAAICAgICAgICBpZiAoIWhhc1BhdGNoZWQpIHsKICAgICAgICAgICAgaGFzUGF0Y2hlZCA9IHRydWU7CiAgICAgICAgICAgIGF1dG8gYWRkciA9IGNhc3Q8dWludHB0cl90PihHZXRQcm9jQWRkcmVzcygKICAgICAgICAgICAgICAgIEdldE1vZHVsZUhhbmRsZUEoImxpYmNvY29zMmQuZGxsIiksICI/Y29tcGlsZVNoYWRlckBDQ0dMUHJvZ3JhbUBjb2NvczJkQEBBQUVfTlBBSUlQQkRAWiIpKTsKICAgICAgICAgICAgLy8gb2sgc28gYmFzaWNhbGx5IHRoaXMgcGF0Y2hlcyBvdXQgYW4gYWJvcnQoKSBpbiBjb21waWxlU2hhZGVyCiAgICAgICAgICAgIC8vIGJlY2F1c2UgZm9yIHNvbWUgcmVhc29uIHRoZXkgZGVjaWRlZCB0byBtYWtlIGl0IHJldHVybiBmYWxzZSBvbmx5IG9uIHdpblJUID8/PwogICAgICAgICAgICAvLyBhbmQgb24gZXZlcnkgb3RoZXIgcGxhdGZvcm0gZWxzZSBpdCBhYm9ydHMKICAgICAgICAgICAgcGF0Y2goY2FzdDx2b2lkKj4oYWRkciArIDB4QTkpLCB7MHg5MCwgMHg5MCwgMHg5MCwgMHg5MCwgMHg5MCwgMHg5MH0pOwogICAgICAgIH0",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABDCAAAAAAAACUGAAAAAAAAAAAAAAAA8L8"
				],
				[
					122,
					1,
					"left_delete",
					null,
					"AQAAAD8LAAAAAAAAPwsAAAAAAAAEAAAAZ2Q6Og",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABDCwAAAAAAAD8LAAAAAAAAAAAAAAAA8L8"
				],
				[
					125,
					4,
					"left_delete",
					null,
					"BAAAAO0TAAAAAAAA7RMAAAAAAAABAAAAOuwTAAAAAAAA7BMAAAAAAAABAAAAOusTAAAAAAAA6xMAAAAAAAABAAAAZOoTAAAAAAAA6hMAAAAAAAABAAAAZw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADuEwAAAAAAAO4TAAAAAAAAAAAAAAAA8L8"
				],
				[
					128,
					4,
					"left_delete",
					null,
					"BAAAADIVAAAAAAAAMhUAAAAAAAABAAAAOjEVAAAAAAAAMRUAAAAAAAABAAAAOjAVAAAAAAAAMBUAAAAAAAABAAAAZC8VAAAAAAAALxUAAAAAAAABAAAAZw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAzFQAAAAAAADMVAAAAAAAAAAAAAAAA8L8"
				],
				[
					133,
					1,
					"insert",
					{
						"characters": "<algorithm>"
					},
					"CwAAAEwAAAAAAAAATQAAAAAAAAAAAAAATQAAAAAAAABOAAAAAAAAAAAAAABOAAAAAAAAAE8AAAAAAAAAAAAAAE8AAAAAAAAAUAAAAAAAAAAAAAAAUAAAAAAAAABRAAAAAAAAAAAAAABRAAAAAAAAAFIAAAAAAAAAAAAAAFIAAAAAAAAAUwAAAAAAAAAAAAAAUwAAAAAAAABUAAAAAAAAAAAAAABUAAAAAAAAAFUAAAAAAAAAAAAAAFUAAAAAAAAAVgAAAAAAAAAAAAAAVgAAAAAAAABXAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABMAAAAAAAAAEwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					136,
					1,
					"insert",
					{
						"characters": "#include"
					},
					"CAAAAEwAAAAAAAAATQAAAAAAAAAAAAAATQAAAAAAAABOAAAAAAAAAAAAAABOAAAAAAAAAE8AAAAAAAAAAAAAAE8AAAAAAAAAUAAAAAAAAAAAAAAAUAAAAAAAAABRAAAAAAAAAAAAAABRAAAAAAAAAFIAAAAAAAAAAAAAAFIAAAAAAAAAUwAAAAAAAAAAAAAAUwAAAAAAAABUAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABMAAAAAAAAAEwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					137,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFQAAAAAAAAAVQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABUAAAAAAAAAFQAAAAAAAAAAAAAAAAA8L8"
				],
				[
					143,
					1,
					"insert",
					{
						"characters": "std::"
					},
					"BQAAAEgXAAAAAAAASRcAAAAAAAAAAAAASRcAAAAAAABKFwAAAAAAAAAAAABKFwAAAAAAAEsXAAAAAAAAAAAAAEsXAAAAAAAATBcAAAAAAAAAAAAATBcAAAAAAABNFwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABIFwAAAAAAAEgXAAAAAAAAAAAAAAAA8L8"
				],
				[
					146,
					1,
					"insert",
					{
						"characters": "std::"
					},
					"BQAAAIcWAAAAAAAAiBYAAAAAAAAAAAAAiBYAAAAAAACJFgAAAAAAAAAAAACJFgAAAAAAAIoWAAAAAAAAAAAAAIoWAAAAAAAAixYAAAAAAAAAAAAAixYAAAAAAACMFgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACHFgAAAAAAAIcWAAAAAAAAAAAAAAAA8L8"
				],
				[
					149,
					1,
					"insert",
					{
						"characters": "\n#import"
					},
					"CAAAAGAAAAAAAAAAYQAAAAAAAAAAAAAAYQAAAAAAAABiAAAAAAAAAAAAAABiAAAAAAAAAGMAAAAAAAAAAAAAAGMAAAAAAAAAZAAAAAAAAAAAAAAAZAAAAAAAAABlAAAAAAAAAAAAAABlAAAAAAAAAGYAAAAAAAAAAAAAAGYAAAAAAAAAZwAAAAAAAAAAAAAAZwAAAAAAAABoAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABgAAAAAAAAAGAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					150,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAGgAAAAAAAAAaQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABoAAAAAAAAAGgAAAAAAAAAAAAAAAAA8L8"
				],
				[
					151,
					1,
					"insert_snippet",
					{
						"contents": "<$0>"
					},
					"AQAAAGkAAAAAAAAAawAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABpAAAAAAAAAGkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					152,
					1,
					"insert",
					{
						"characters": "Cocoa/Cocoa.h"
					},
					"DQAAAGoAAAAAAAAAawAAAAAAAAAAAAAAawAAAAAAAABsAAAAAAAAAAAAAABsAAAAAAAAAG0AAAAAAAAAAAAAAG0AAAAAAAAAbgAAAAAAAAAAAAAAbgAAAAAAAABvAAAAAAAAAAAAAABvAAAAAAAAAHAAAAAAAAAAAAAAAHAAAAAAAAAAcQAAAAAAAAAAAAAAcQAAAAAAAAByAAAAAAAAAAAAAAByAAAAAAAAAHMAAAAAAAAAAAAAAHMAAAAAAAAAdAAAAAAAAAAAAAAAdAAAAAAAAAB1AAAAAAAAAAAAAAB1AAAAAAAAAHYAAAAAAAAAAAAAAHYAAAAAAAAAdwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABqAAAAAAAAAGoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					154,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAHgAAAAAAAAAeQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB4AAAAAAAAAHgAAAAAAAAAAAAAAAAA8L8"
				],
				[
					167,
					1,
					"paste_edit",
					null,
					"AgAAAHAbAAAAAAAAcBsAAAAAAAAXAAAAZ2x2LT5nZXRNb3VzZVBvc2l0aW9uKClwGwAAAAAAAJ0bAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACHGwAAAAAAAHAbAAAAAAAAAAAAAAAA8L8"
				],
				[
					170,
					1,
					"insert",
					{
						"characters": "["
					},
					"AQAAAHAbAAAAAAAAcRsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABwGwAAAAAAAHAbAAAAAAAAAAAAAAAA8L8"
				],
				[
					173,
					1,
					"insert",
					{
						"characters": "]"
					},
					"AQAAAJ4bAAAAAAAAnxsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACeGwAAAAAAAJ4bAAAAAAAAAAAAAAAA8L8"
				],
				[
					175,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJ4bAAAAAAAAnxsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACeGwAAAAAAAJ4bAAAAAAAAAAAAAAAA8L8"
				],
				[
					176,
					1,
					"paste_edit",
					null,
					"AQAAAJ8bAAAAAAAAwBsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACfGwAAAAAAAJ8bAAAAAAAAAAAAAAAA8L8"
				],
				[
					179,
					1,
					"insert",
					{
						"characters": "NSPoint*"
					},
					"CQAAAFobAAAAAAAAWxsAAAAAAAAAAAAAWxsAAAAAAABbGwAAAAAAAAoAAABjb25zdCBhdXRvWxsAAAAAAABcGwAAAAAAAAAAAABcGwAAAAAAAF0bAAAAAAAAAAAAAF0bAAAAAAAAXhsAAAAAAAAAAAAAXhsAAAAAAABfGwAAAAAAAAAAAABfGwAAAAAAAGAbAAAAAAAAAAAAAGAbAAAAAAAAYRsAAAAAAAAAAAAAYRsAAAAAAABiGwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABkGwAAAAAAAFobAAAAAAAAAAAAAAAA8L8"
				],
				[
					180,
					1,
					"left_delete",
					null,
					"AQAAAGEbAAAAAAAAYRsAAAAAAAABAAAAKg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABiGwAAAAAAAGIbAAAAAAAAAAAAAAAA8L8"
				],
				[
					184,
					1,
					"insert",
					{
						"characters": "["
					},
					"AQAAAG0bAAAAAAAAbhsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABtGwAAAAAAAG0bAAAAAAAAAAAAAAAA8L8"
				],
				[
					192,
					1,
					"left_delete",
					null,
					"AQAAANMdAAAAAAAA0x0AAAAAAAAEAAAAZ2Q6Og",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADTHQAAAAAAANcdAAAAAAAAAAAAAAAA8L8"
				],
				[
					200,
					1,
					"left_delete",
					null,
					"AQAAAG0bAAAAAAAAbRsAAAAAAABSAAAAW1tbTlNBcHBsaWNhdGlvbiBzaGFyZWRBcHBsaWNhdGlvbl0gbWFpbldpbmRvd10gbW91c2VMb2NhdGlvbk91dHNpZGVPZkV2ZW50U3RyZWFtXQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC/GwAAAAAAAG0bAAAAAAAAAAAAAAAA8L8"
				],
				[
					201,
					1,
					"insert",
					{
						"characters": "getMouse"
					},
					"CAAAAG0bAAAAAAAAbhsAAAAAAAAAAAAAbhsAAAAAAABvGwAAAAAAAAAAAABvGwAAAAAAAHAbAAAAAAAAAAAAAHAbAAAAAAAAcRsAAAAAAAAAAAAAcRsAAAAAAAByGwAAAAAAAAAAAAByGwAAAAAAAHMbAAAAAAAAAAAAAHMbAAAAAAAAdBsAAAAAAAAAAAAAdBsAAAAAAAB1GwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABtGwAAAAAAAG0bAAAAAAAAAAAAAAAA8L8"
				],
				[
					202,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAHUbAAAAAAAAdxsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB1GwAAAAAAAHUbAAAAAAAAAAAAAAAA8L8"
				],
				[
					205,
					7,
					"left_delete",
					null,
					"BwAAAGAbAAAAAAAAYBsAAAAAAAABAAAAdF8bAAAAAAAAXxsAAAAAAAABAAAAbl4bAAAAAAAAXhsAAAAAAAABAAAAaV0bAAAAAAAAXRsAAAAAAAABAAAAb1wbAAAAAAAAXBsAAAAAAAABAAAAUFsbAAAAAAAAWxsAAAAAAAABAAAAU1obAAAAAAAAWhsAAAAAAAABAAAATg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABhGwAAAAAAAGEbAAAAAAAAAAAAAAAA8L8"
				],
				[
					206,
					1,
					"insert",
					{
						"characters": "CGPoint"
					},
					"BwAAAFobAAAAAAAAWxsAAAAAAAAAAAAAWxsAAAAAAABcGwAAAAAAAAAAAABcGwAAAAAAAF0bAAAAAAAAAAAAAF0bAAAAAAAAXhsAAAAAAAAAAAAAXhsAAAAAAABfGwAAAAAAAAAAAABfGwAAAAAAAGAbAAAAAAAAAAAAAGAbAAAAAAAAYRsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABaGwAAAAAAAFobAAAAAAAAAAAAAAAA8L8"
				],
				[
					210,
					1,
					"insert",
					{
						"characters": "\nextern"
					},
					"BwAAALgAAAAAAAAAuQAAAAAAAAAAAAAAuQAAAAAAAAC6AAAAAAAAAAAAAAC6AAAAAAAAALsAAAAAAAAAAAAAALsAAAAAAAAAvAAAAAAAAAAAAAAAvAAAAAAAAAC9AAAAAAAAAAAAAAC9AAAAAAAAAL4AAAAAAAAAAAAAAL4AAAAAAAAAvwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC4AAAAAAAAALgAAAAAAAAAAAAAAAAA8L8"
				],
				[
					211,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAL8AAAAAAAAAwAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC/AAAAAAAAAL8AAAAAAAAAAAAAAAAA8L8"
				],
				[
					212,
					1,
					"paste_edit",
					null,
					"AQAAAMAAAAAAAAAA0gAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADAAAAAAAAAAMAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					213,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAANIAAAAAAAAA0wAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADSAAAAAAAAANIAAAAAAAAAAAAAAAAA8L8"
				],
				[
					219,
					2,
					"left_delete",
					null,
					"AgAAADgAAAAAAAAAOAAAAAAAAAATAAAAI2luY2x1ZGUgPGZtb2QuaHBwPjcAAAAAAAAANwAAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABLAAAAAAAAADgAAAAAAAAAAAAAAAAA8L8"
				],
				[
					224,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAAAAAAAAAAAAAQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					226,
					1,
					"paste_edit",
					null,
					"AQAAAAAAAAAAAAAAEwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
				],
				[
					231,
					1,
					"insert",
					{
						"characters": "\"C\""
					},
					"AwAAAMAAAAAAAAAAwQAAAAAAAAAAAAAAwQAAAAAAAADCAAAAAAAAAAAAAADCAAAAAAAAAMMAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADAAAAAAAAAAMAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					232,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMMAAAAAAAAAxAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADDAAAAAAAAAMMAAAAAAAAAAAAAAAAA8L8"
				],
				[
					235,
					2,
					"left_delete",
					null,
					"AgAAAGEAAAAAAAAAYQAAAAAAAAAXAAAAI2ltcG9ydCA8Q29jb2EvQ29jb2EuaD5gAAAAAAAAAGAAAAAAAAAAAQAAAAo",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB4AAAAAAAAAGEAAAAAAAAAAAAAAAAA8L8"
				],
				[
					238,
					1,
					"left_delete",
					null,
					"AQAAAK0AAAAAAAAArQAAAAAAAAABAAAARw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACuAAAAAAAAAK4AAAAAAAAAAAAAAAAA8L8"
				],
				[
					239,
					1,
					"insert",
					{
						"characters": "C"
					},
					"AQAAAK0AAAAAAAAArgAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACtAAAAAAAAAK0AAAAAAAAAAAAAAAAA8L8"
				],
				[
					240,
					1,
					"left_delete",
					null,
					"AQAAAK0AAAAAAAAArQAAAAAAAAABAAAAQw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACuAAAAAAAAAK4AAAAAAAAAAAAAAAAA8L8"
				],
				[
					241,
					1,
					"insert",
					{
						"characters": "G"
					},
					"AQAAAK0AAAAAAAAArgAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACtAAAAAAAAAK0AAAAAAAAAAAAAAAAA8L8"
				],
				[
					244,
					1,
					"insert",
					{
						"characters": "#inc"
					},
					"BAAAAGEAAAAAAAAAYgAAAAAAAAAAAAAAYgAAAAAAAABjAAAAAAAAAAAAAABjAAAAAAAAAGQAAAAAAAAAAAAAAGQAAAAAAAAAZQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABhAAAAAAAAAGEAAAAAAAAAAAAAAAAA8L8"
				],
				[
					245,
					3,
					"left_delete",
					null,
					"AwAAAGQAAAAAAAAAZAAAAAAAAAABAAAAY2MAAAAAAAAAYwAAAAAAAAABAAAAbmIAAAAAAAAAYgAAAAAAAAABAAAAaQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABlAAAAAAAAAGUAAAAAAAAAAAAAAAAA8L8"
				],
				[
					246,
					1,
					"insert",
					{
						"characters": "include"
					},
					"BwAAAGIAAAAAAAAAYwAAAAAAAAAAAAAAYwAAAAAAAABkAAAAAAAAAAAAAABkAAAAAAAAAGUAAAAAAAAAAAAAAGUAAAAAAAAAZgAAAAAAAAAAAAAAZgAAAAAAAABnAAAAAAAAAAAAAABnAAAAAAAAAGgAAAAAAAAAAAAAAGgAAAAAAAAAaQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABiAAAAAAAAAGIAAAAAAAAAAAAAAAAA8L8"
				],
				[
					247,
					1,
					"insert",
					{
						"characters": " CoreFoundation"
					},
					"DwAAAGkAAAAAAAAAagAAAAAAAAAAAAAAagAAAAAAAABrAAAAAAAAAAAAAABrAAAAAAAAAGwAAAAAAAAAAAAAAGwAAAAAAAAAbQAAAAAAAAAAAAAAbQAAAAAAAABuAAAAAAAAAAAAAABuAAAAAAAAAG8AAAAAAAAAAAAAAG8AAAAAAAAAcAAAAAAAAAAAAAAAcAAAAAAAAABxAAAAAAAAAAAAAABxAAAAAAAAAHIAAAAAAAAAAAAAAHIAAAAAAAAAcwAAAAAAAAAAAAAAcwAAAAAAAAB0AAAAAAAAAAAAAAB0AAAAAAAAAHUAAAAAAAAAAAAAAHUAAAAAAAAAdgAAAAAAAAAAAAAAdgAAAAAAAAB3AAAAAAAAAAAAAAB3AAAAAAAAAHgAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABpAAAAAAAAAGkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					248,
					1,
					"insert",
					{
						"characters": "/CoreFoundation.h"
					},
					"EQAAAHgAAAAAAAAAeQAAAAAAAAAAAAAAeQAAAAAAAAB6AAAAAAAAAAAAAAB6AAAAAAAAAHsAAAAAAAAAAAAAAHsAAAAAAAAAfAAAAAAAAAAAAAAAfAAAAAAAAAB9AAAAAAAAAAAAAAB9AAAAAAAAAH4AAAAAAAAAAAAAAH4AAAAAAAAAfwAAAAAAAAAAAAAAfwAAAAAAAACAAAAAAAAAAAAAAACAAAAAAAAAAIEAAAAAAAAAAAAAAIEAAAAAAAAAggAAAAAAAAAAAAAAggAAAAAAAACDAAAAAAAAAAAAAACDAAAAAAAAAIQAAAAAAAAAAAAAAIQAAAAAAAAAhQAAAAAAAAAAAAAAhQAAAAAAAACGAAAAAAAAAAAAAACGAAAAAAAAAIcAAAAAAAAAAAAAAIcAAAAAAAAAiAAAAAAAAAAAAAAAiAAAAAAAAACJAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB4AAAAAAAAAHgAAAAAAAAAAAAAAAAA8L8"
				],
				[
					249,
					1,
					"insert",
					{
						"characters": ">"
					},
					"AQAAAIkAAAAAAAAAigAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACJAAAAAAAAAIkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					252,
					1,
					"insert",
					{
						"characters": "<"
					},
					"AQAAAGoAAAAAAAAAawAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABqAAAAAAAAAGoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					255,
					1,
					"insert",
					{
						"characters": "Graphics"
					},
					"CQAAAG8AAAAAAAAAcAAAAAAAAAAAAAAAcAAAAAAAAABwAAAAAAAAAAoAAABGb3VuZGF0aW9ucAAAAAAAAABxAAAAAAAAAAAAAABxAAAAAAAAAHIAAAAAAAAAAAAAAHIAAAAAAAAAcwAAAAAAAAAAAAAAcwAAAAAAAAB0AAAAAAAAAAAAAAB0AAAAAAAAAHUAAAAAAAAAAAAAAHUAAAAAAAAAdgAAAAAAAAAAAAAAdgAAAAAAAAB3AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB5AAAAAAAAAG8AAAAAAAAAAAAAAAAA8L8"
				],
				[
					258,
					1,
					"insert",
					{
						"characters": "Graphics"
					},
					"CQAAAHwAAAAAAAAAfQAAAAAAAAAAAAAAfQAAAAAAAAB9AAAAAAAAAAoAAABGb3VuZGF0aW9ufQAAAAAAAAB+AAAAAAAAAAAAAAB+AAAAAAAAAH8AAAAAAAAAAAAAAH8AAAAAAAAAgAAAAAAAAAAAAAAAgAAAAAAAAACBAAAAAAAAAAAAAACBAAAAAAAAAIIAAAAAAAAAAAAAAIIAAAAAAAAAgwAAAAAAAAAAAAAAgwAAAAAAAACEAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACGAAAAAAAAAHwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					277,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAADgBAAAAAAAAOQEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA4AQAAAAAAADgBAAAAAAAAAAAAAAAA8L8"
				],
				[
					278,
					1,
					"paste_edit",
					null,
					"AQAAADkBAAAAAAAA7gIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA5AQAAAAAAADkBAAAAAAAAAAAAAAAA8L8"
				],
				[
					279,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAO4CAAAAAAAA7wIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADuAgAAAAAAAO4CAAAAAAAAAAAAAAAA8L8"
				],
				[
					282,
					1,
					"insert",
					{
						"characters": "\nFLAlertLay"
					},
					"DAAAADcJAAAAAAAAOAkAAAAAAAAAAAAAOAkAAAAAAABECQAAAAAAAAAAAABECQAAAAAAAEUJAAAAAAAAAAAAAEUJAAAAAAAARgkAAAAAAAAAAAAARgkAAAAAAABHCQAAAAAAAAAAAABHCQAAAAAAAEgJAAAAAAAAAAAAAEgJAAAAAAAASQkAAAAAAAAAAAAASQkAAAAAAABKCQAAAAAAAAAAAABKCQAAAAAAAEsJAAAAAAAAAAAAAEsJAAAAAAAATAkAAAAAAAAAAAAATAkAAAAAAABNCQAAAAAAAAAAAABNCQAAAAAAAE4JAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA3CQAAAAAAADcJAAAAAAAAAAAAAAAA8L8"
				],
				[
					283,
					1,
					"insert",
					{
						"characters": "er::create"
					},
					"CgAAAE4JAAAAAAAATwkAAAAAAAAAAAAATwkAAAAAAABQCQAAAAAAAAAAAABQCQAAAAAAAFEJAAAAAAAAAAAAAFEJAAAAAAAAUgkAAAAAAAAAAAAAUgkAAAAAAABTCQAAAAAAAAAAAABTCQAAAAAAAFQJAAAAAAAAAAAAAFQJAAAAAAAAVQkAAAAAAAAAAAAAVQkAAAAAAABWCQAAAAAAAAAAAABWCQAAAAAAAFcJAAAAAAAAAAAAAFcJAAAAAAAAWAkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABOCQAAAAAAAE4JAAAAAAAAAAAAAAAA8L8"
				],
				[
					284,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAFgJAAAAAAAAWgkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABYCQAAAAAAAFgJAAAAAAAAAAAAAAAA8L8"
				],
				[
					290,
					1,
					"paste_edit",
					null,
					"AQAAAFkJAAAAAAAAfgkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABZCQAAAAAAAFkJAAAAAAAAAAAAAAAA8L8"
				],
				[
					291,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAH4JAAAAAAAAfwkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB+CQAAAAAAAH4JAAAAAAAAAAAAAAAA8L8"
				],
				[
					292,
					1,
					"insert",
					{
						"characters": " error,"
					},
					"BwAAAH8JAAAAAAAAgAkAAAAAAAAAAAAAgAkAAAAAAACBCQAAAAAAAAAAAACBCQAAAAAAAIIJAAAAAAAAAAAAAIIJAAAAAAAAgwkAAAAAAAAAAAAAgwkAAAAAAACECQAAAAAAAAAAAACECQAAAAAAAIUJAAAAAAAAAAAAAIUJAAAAAAAAhgkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB/CQAAAAAAAH8JAAAAAAAAAAAAAAAA8L8"
				],
				[
					293,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIYJAAAAAAAAhwkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACGCQAAAAAAAIYJAAAAAAAAAAAAAAAA8L8"
				],
				[
					294,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAIcJAAAAAAAAiQkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACHCQAAAAAAAIcJAAAAAAAAAAAAAAAA8L8"
				],
				[
					295,
					1,
					"insert",
					{
						"characters": "Ok"
					},
					"AgAAAIgJAAAAAAAAiQkAAAAAAAAAAAAAiQkAAAAAAACKCQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACICQAAAAAAAIgJAAAAAAAAAAAAAAAA8L8"
				],
				[
					297,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAIwJAAAAAAAAjQkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACMCQAAAAAAAIwJAAAAAAAAAAAAAAAA8L8"
				],
				[
					299,
					1,
					"insert",
					{
						"characters": "->show"
					},
					"BgAAAIwJAAAAAAAAjQkAAAAAAAAAAAAAjQkAAAAAAACOCQAAAAAAAAAAAACOCQAAAAAAAI8JAAAAAAAAAAAAAI8JAAAAAAAAkAkAAAAAAAAAAAAAkAkAAAAAAACRCQAAAAAAAAAAAACRCQAAAAAAAJIJAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACMCQAAAAAAAIwJAAAAAAAAAAAAAAAA8L8"
				],
				[
					300,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAJIJAAAAAAAAlAkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACSCQAAAAAAAJIJAAAAAAAAAAAAAAAA8L8"
				],
				[
					306,
					2,
					"left_delete",
					null,
					"AgAAAOAIAAAAAAAA4AgAAAAAAABXAAAAICAgICAgICAgICAgTWVzc2FnZUJveEEoTlVMTCwgZXJyb3IuY19zdHIoKSwgIm1lbnUtc2hhZGVycyBmYWlsZWQgdG8gbG9hZCBzaGFkZXJzIiwgMCk73wgAAAAAAADfCAAAAAAAAAEAAAAK",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA3CQAAAAAAAOAIAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "Cacao/cocos/cocos2dx/shaders/CCGLProgram.h",
			"settings":
			{
				"buffer_size": 10330,
				"line_ending": "Unix"
			}
		},
		{
			"file": "objcshit.m",
			"settings":
			{
				"buffer_size": 139,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"insert",
					{
						"characters": "#import"
					},
					"BwAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAACAAAAAAAAAAAAAAACAAAAAAAAAAMAAAAAAAAAAAAAAAMAAAAAAAAABAAAAAAAAAAAAAAABAAAAAAAAAAFAAAAAAAAAAAAAAAFAAAAAAAAAAYAAAAAAAAAAAAAAAYAAAAAAAAABwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2,
					1,
					"insert",
					{
						"characters": " <Cco"
					},
					"BQAAAAcAAAAAAAAACAAAAAAAAAAAAAAACAAAAAAAAAAJAAAAAAAAAAAAAAAJAAAAAAAAAAoAAAAAAAAAAAAAAAoAAAAAAAAACwAAAAAAAAAAAAAACwAAAAAAAAAMAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAHAAAAAAAAAAcAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3,
					2,
					"left_delete",
					null,
					"AgAAAAsAAAAAAAAACwAAAAAAAAABAAAAbwoAAAAAAAAACgAAAAAAAAABAAAAYw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAMAAAAAAAAAAwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4,
					1,
					"insert",
					{
						"characters": "ocoa/Cocoa.h>"
					},
					"DQAAAAoAAAAAAAAACwAAAAAAAAAAAAAACwAAAAAAAAAMAAAAAAAAAAAAAAAMAAAAAAAAAA0AAAAAAAAAAAAAAA0AAAAAAAAADgAAAAAAAAAAAAAADgAAAAAAAAAPAAAAAAAAAAAAAAAPAAAAAAAAABAAAAAAAAAAAAAAABAAAAAAAAAAEQAAAAAAAAAAAAAAEQAAAAAAAAASAAAAAAAAAAAAAAASAAAAAAAAABMAAAAAAAAAAAAAABMAAAAAAAAAFAAAAAAAAAAAAAAAFAAAAAAAAAAVAAAAAAAAAAAAAAAVAAAAAAAAABYAAAAAAAAAAAAAABYAAAAAAAAAFwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAKAAAAAAAAAAoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					5,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABcAAAAAAAAAGAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAXAAAAAAAAABcAAAAAAAAAAAAAAAAA8L8"
				],
				[
					6,
					1,
					"left_delete",
					null,
					"AQAAABcAAAAAAAAAFwAAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAYAAAAAAAAABgAAAAAAAAAAAAAAAAA8L8"
				],
				[
					7,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAABcAAAAAAAAAGAAAAAAAAAAAAAAAGAAAAAAAAAAZAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAXAAAAAAAAABcAAAAAAAAAAAAAAAAA8L8"
				],
				[
					8,
					1,
					"insert",
					{
						"characters": "CGPoint"
					},
					"BwAAABkAAAAAAAAAGgAAAAAAAAAAAAAAGgAAAAAAAAAbAAAAAAAAAAAAAAAbAAAAAAAAABwAAAAAAAAAAAAAABwAAAAAAAAAHQAAAAAAAAAAAAAAHQAAAAAAAAAeAAAAAAAAAAAAAAAeAAAAAAAAAB8AAAAAAAAAAAAAAB8AAAAAAAAAIAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAZAAAAAAAAABkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					9,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACAAAAAAAAAAIQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAgAAAAAAAAACAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					10,
					1,
					"insert",
					{
						"characters": "getM"
					},
					"BAAAACEAAAAAAAAAIgAAAAAAAAAAAAAAIgAAAAAAAAAjAAAAAAAAAAAAAAAjAAAAAAAAACQAAAAAAAAAAAAAACQAAAAAAAAAJQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAhAAAAAAAAACEAAAAAAAAAAAAAAAAA8L8"
				],
				[
					11,
					4,
					"left_delete",
					null,
					"BAAAACQAAAAAAAAAJAAAAAAAAAABAAAATSMAAAAAAAAAIwAAAAAAAAABAAAAdCIAAAAAAAAAIgAAAAAAAAABAAAAZSEAAAAAAAAAIQAAAAAAAAABAAAAZw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAlAAAAAAAAACUAAAAAAAAAAAAAAAAA8L8"
				],
				[
					12,
					1,
					"insert",
					{
						"characters": "getMouse"
					},
					"CAAAACEAAAAAAAAAIgAAAAAAAAAAAAAAIgAAAAAAAAAjAAAAAAAAAAAAAAAjAAAAAAAAACQAAAAAAAAAAAAAACQAAAAAAAAAJQAAAAAAAAAAAAAAJQAAAAAAAAAmAAAAAAAAAAAAAAAmAAAAAAAAACcAAAAAAAAAAAAAACcAAAAAAAAAKAAAAAAAAAAAAAAAKAAAAAAAAAApAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAhAAAAAAAAACEAAAAAAAAAAAAAAAAA8L8"
				],
				[
					13,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAACkAAAAAAAAAKwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAApAAAAAAAAACkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					15,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACsAAAAAAAAALAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAArAAAAAAAAACsAAAAAAAAAAAAAAAAA8L8"
				],
				[
					16,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAACwAAAAAAAAALgAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAsAAAAAAAAACwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					17,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"AwAAAC0AAAAAAAAALgAAAAAAAAAAAAAALgAAAAAAAAAvAAAAAAAAAAAAAAAuAAAAAAAAAC8AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAtAAAAAAAAAC0AAAAAAAAAAAAAAAAA8L8"
				],
				[
					18,
					1,
					"insert",
					{
						"characters": "return"
					},
					"BgAAAC8AAAAAAAAAMAAAAAAAAAAAAAAAMAAAAAAAAAAxAAAAAAAAAAAAAAAxAAAAAAAAADIAAAAAAAAAAAAAADIAAAAAAAAAMwAAAAAAAAAAAAAAMwAAAAAAAAA0AAAAAAAAAAAAAAA0AAAAAAAAADUAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAvAAAAAAAAAC8AAAAAAAAAAAAAAAAA8L8"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADUAAAAAAAAANgAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA1AAAAAAAAADUAAAAAAAAAAAAAAAAA8L8"
				],
				[
					22,
					1,
					"paste_edit",
					null,
					"AQAAADYAAAAAAAAAiAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA2AAAAAAAAADYAAAAAAAAAAAAAAAAA8L8"
				],
				[
					23,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAIgAAAAAAAAAiQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACIAAAAAAAAAIgAAAAAAAAAAAAAAAAA8L8"
				],
				[
					26,
					1,
					"insert",
					{
						"characters": "\nextern"
					},
					"BwAAABgAAAAAAAAAGQAAAAAAAAAAAAAAGQAAAAAAAAAaAAAAAAAAAAAAAAAaAAAAAAAAABsAAAAAAAAAAAAAABsAAAAAAAAAHAAAAAAAAAAAAAAAHAAAAAAAAAAdAAAAAAAAAAAAAAAdAAAAAAAAAB4AAAAAAAAAAAAAAB4AAAAAAAAAHwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAYAAAAAAAAABgAAAAAAAAAAAAAAAAA8L8"
				],
				[
					27,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAB8AAAAAAAAAIAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAfAAAAAAAAAB8AAAAAAAAAAAAAAAAA8L8"
				],
				[
					28,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAACAAAAAAAAAAIgAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAgAAAAAAAAACAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					30,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACIAAAAAAAAAIwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAiAAAAAAAAACIAAAAAAAAAAAAAAAAA8L8"
				],
				[
					31,
					1,
					"left_delete",
					null,
					"AQAAACIAAAAAAAAAIgAAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAjAAAAAAAAACMAAAAAAAAAAAAAAAAA8L8"
				],
				[
					33,
					1,
					"insert",
					{
						"characters": "C"
					},
					"AQAAACEAAAAAAAAAIgAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAhAAAAAAAAACEAAAAAAAAAAAAAAAAA8L8"
				],
				[
					35,
					11,
					"left_delete",
					null,
					"CwAAACIAAAAAAAAAIgAAAAAAAAABAAAAIiEAAAAAAAAAIQAAAAAAAAABAAAAQyAAAAAAAAAAIAAAAAAAAAABAAAAIh8AAAAAAAAAHwAAAAAAAAABAAAAIB4AAAAAAAAAHgAAAAAAAAABAAAAbh0AAAAAAAAAHQAAAAAAAAABAAAAchwAAAAAAAAAHAAAAAAAAAABAAAAZRsAAAAAAAAAGwAAAAAAAAABAAAAdBoAAAAAAAAAGgAAAAAAAAABAAAAeBkAAAAAAAAAGQAAAAAAAAABAAAAZRgAAAAAAAAAGAAAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAjAAAAAAAAACMAAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "Cacao/cmake/CacaoRoot.cmake",
			"settings":
			{
				"buffer_size": 2299,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"insert",
					{
						"characters": "\n#"
					},
					"AwAAABkIAAAAAAAAGggAAAAAAAAAAAAAGggAAAAAAAAbCAAAAAAAAAAAAAAbCAAAAAAAABwIAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAZCAAAAAAAABkIAAAAAAAAAAAAAAAA8L8"
				],
				[
					4,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAABwIAAAAAAAAHggAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAcCAAAAAAAABwIAAAAAAAAAAAAAAAA8L8"
				],
				[
					5,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAABwIAAAAAAAAHAgAAAAAAAABAAAAexwIAAAAAAAAHAgAAAAAAAABAAAAfQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAdCAAAAAAAAB0IAAAAAAAAAAAAAAAA8L8"
				],
				[
					6,
					1,
					"left_delete",
					null,
					"AQAAABsIAAAAAAAAGwgAAAAAAAABAAAAIw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAcCAAAAAAAABwIAAAAAAAAAAAAAAAA8L8"
				],
				[
					12,
					1,
					"paste_edit",
					null,
					"AQAAABsIAAAAAAAALggAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAbCAAAAAAAABsIAAAAAAAAAAAAAAAA8L8"
				],
				[
					13,
					1,
					"insert",
					{
						"characters": "/fmod"
					},
					"BQAAAC4IAAAAAAAALwgAAAAAAAAAAAAALwgAAAAAAAAwCAAAAAAAAAAAAAAwCAAAAAAAADEIAAAAAAAAAAAAADEIAAAAAAAAMggAAAAAAAAAAAAAMggAAAAAAAAzCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAuCAAAAAAAAC4IAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "Cacao/cocos/cocos2dx/platform/mac/CCEGLView.h",
			"settings":
			{
				"buffer_size": 2239,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAAB0IAAAAAAAAHggAAAAAAAAAAAAAHggAAAAAAAAiCAAAAAAAAAAAAAAiCAAAAAAAACMIAAAAAAAAAAAAACMIAAAAAAAAJwgAAAAAAAAAAAAAHggAAAAAAAAeCAAAAAAAAAQAAAAgICAg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAdCAAAAAAAAB0IAAAAAAAAAAAAAAAA8L8"
				],
				[
					4,
					1,
					"paste_edit",
					null,
					"AQAAACMIAAAAAAAAaQgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAjCAAAAAAAACMIAAAAAAAAAAAAAAAA8L8"
				],
				[
					9,
					3,
					"left_delete",
					null,
					"AwAAAB8IAAAAAAAAHwgAAAAAAABKAAAAICAgIGlubGluZSBDQ1BvaW50IGdldE1vdXNlUG9zaXRpb24oKSB7IHJldHVybiB7IG1fZk1vdXNlWCwgbV9mTW91c2VZIH07IH0eCAAAAAAAAB4IAAAAAAAAAQAAAAodCAAAAAAAAB0IAAAAAAAAAQAAAAo",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABpCAAAAAAAAB8IAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "Cacao/gen/data/GeometryDash.mm",
			"settings":
			{
				"buffer_size": 75109,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					7,
					1,
					"insert",
					{
						"characters": "\n\nclass"
					},
					"BwAAADIiAQAAAAAAMyIBAAAAAAAAAAAAMyIBAAAAAAA0IgEAAAAAAAAAAAA0IgEAAAAAADUiAQAAAAAAAAAAADUiAQAAAAAANiIBAAAAAAAAAAAANiIBAAAAAAA3IgEAAAAAAAAAAAA3IgEAAAAAADgiAQAAAAAAAAAAADgiAQAAAAAAOSIBAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAyIgEAAAAAADIiAQAAAAAAAAAAAAAA8L8"
				],
				[
					8,
					1,
					"insert",
					{
						"characters": " FModAudio"
					},
					"CgAAADkiAQAAAAAAOiIBAAAAAAAAAAAAOiIBAAAAAAA7IgEAAAAAAAAAAAA7IgEAAAAAADwiAQAAAAAAAAAAADwiAQAAAAAAPSIBAAAAAAAAAAAAPSIBAAAAAAA+IgEAAAAAAAAAAAA+IgEAAAAAAD8iAQAAAAAAAAAAAD8iAQAAAAAAQCIBAAAAAAAAAAAAQCIBAAAAAABBIgEAAAAAAAAAAABBIgEAAAAAAEIiAQAAAAAAAAAAAEIiAQAAAAAAQyIBAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA5IgEAAAAAADkiAQAAAAAAAAAAAAAA8L8"
				],
				[
					9,
					1,
					"insert",
					{
						"characters": "Engine"
					},
					"BgAAAEMiAQAAAAAARCIBAAAAAAAAAAAARCIBAAAAAABFIgEAAAAAAAAAAABFIgEAAAAAAEYiAQAAAAAAAAAAAEYiAQAAAAAARyIBAAAAAAAAAAAARyIBAAAAAABIIgEAAAAAAAAAAABIIgEAAAAAAEkiAQAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABDIgEAAAAAAEMiAQAAAAAAAAAAAAAA8L8"
				],
				[
					20,
					1,
					"paste_edit",
					null,
					"AgAAADoiAQAAAAAAOiIBAAAAAAAPAAAARk1vZEF1ZGlvRW5naW5lOiIBAAAAAABJIgEAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA6IgEAAAAAAEkiAQAAAAAAAAAAAAAA8L8"
				],
				[
					21,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEkiAQAAAAAASiIBAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABJIgEAAAAAAEkiAQAAAAAAAAAAAAAA8L8"
				],
				[
					22,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAEoiAQAAAAAATCIBAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABKIgEAAAAAAEoiAQAAAAAAAAAAAAAA8L8"
				],
				[
					23,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"AwAAAEsiAQAAAAAATCIBAAAAAAAAAAAATCIBAAAAAABNIgEAAAAAAAAAAABMIgEAAAAAAE0iAQAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABLIgEAAAAAAEsiAQAAAAAAAAAAAAAA8L8"
				],
				[
					24,
					1,
					"insert",
					{
						"characters": "static"
					},
					"BgAAAE0iAQAAAAAATiIBAAAAAAAAAAAATiIBAAAAAABPIgEAAAAAAAAAAABPIgEAAAAAAFAiAQAAAAAAAAAAAFAiAQAAAAAAUSIBAAAAAAAAAAAAUSIBAAAAAABSIgEAAAAAAAAAAABSIgEAAAAAAFMiAQAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABNIgEAAAAAAE0iAQAAAAAAAAAAAAAA8L8"
				],
				[
					25,
					1,
					"insert",
					{
						"characters": " FMod"
					},
					"BQAAAFMiAQAAAAAAVCIBAAAAAAAAAAAAVCIBAAAAAABVIgEAAAAAAAAAAABVIgEAAAAAAFYiAQAAAAAAAAAAAFYiAQAAAAAAVyIBAAAAAAAAAAAAVyIBAAAAAABYIgEAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABTIgEAAAAAAFMiAQAAAAAAAAAAAAAA8L8"
				],
				[
					26,
					2,
					"left_delete",
					null,
					"AgAAAFciAQAAAAAAVyIBAAAAAAABAAAAZFYiAQAAAAAAViIBAAAAAAABAAAAbw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABYIgEAAAAAAFgiAQAAAAAAAAAAAAAA8L8"
				],
				[
					27,
					1,
					"insert",
					{
						"characters": "ODAudioEnin"
					},
					"CwAAAFYiAQAAAAAAVyIBAAAAAAAAAAAAVyIBAAAAAABYIgEAAAAAAAAAAABYIgEAAAAAAFkiAQAAAAAAAAAAAFkiAQAAAAAAWiIBAAAAAAAAAAAAWiIBAAAAAABbIgEAAAAAAAAAAABbIgEAAAAAAFwiAQAAAAAAAAAAAFwiAQAAAAAAXSIBAAAAAAAAAAAAXSIBAAAAAABeIgEAAAAAAAAAAABeIgEAAAAAAF8iAQAAAAAAAAAAAF8iAQAAAAAAYCIBAAAAAAAAAAAAYCIBAAAAAABhIgEAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABWIgEAAAAAAFYiAQAAAAAAAAAAAAAA8L8"
				],
				[
					28,
					2,
					"left_delete",
					null,
					"AgAAAGAiAQAAAAAAYCIBAAAAAAABAAAAbl8iAQAAAAAAXyIBAAAAAAABAAAAaQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABhIgEAAAAAAGEiAQAAAAAAAAAAAAAA8L8"
				],
				[
					29,
					1,
					"insert",
					{
						"characters": "gine*"
					},
					"BQAAAF8iAQAAAAAAYCIBAAAAAAAAAAAAYCIBAAAAAABhIgEAAAAAAAAAAABhIgEAAAAAAGIiAQAAAAAAAAAAAGIiAQAAAAAAYyIBAAAAAAAAAAAAYyIBAAAAAABkIgEAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABfIgEAAAAAAF8iAQAAAAAAAAAAAAAA8L8"
				],
				[
					30,
					1,
					"insert",
					{
						"characters": " create"
					},
					"BwAAAGQiAQAAAAAAZSIBAAAAAAAAAAAAZSIBAAAAAABmIgEAAAAAAAAAAABmIgEAAAAAAGciAQAAAAAAAAAAAGciAQAAAAAAaCIBAAAAAAAAAAAAaCIBAAAAAABpIgEAAAAAAAAAAABpIgEAAAAAAGoiAQAAAAAAAAAAAGoiAQAAAAAAayIBAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABkIgEAAAAAAGQiAQAAAAAAAAAAAAAA8L8"
				],
				[
					31,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAGsiAQAAAAAAbSIBAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABrIgEAAAAAAGsiAQAAAAAAAAAAAAAA8L8"
				],
				[
					33,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAG0iAQAAAAAAbiIBAAAAAAAAAAAAbiIBAAAAAABvIgEAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABtIgEAAAAAAG0iAQAAAAAAAAAAAAAA8L8"
				],
				[
					34,
					1,
					"insert",
					{
						"characters": " x"
					},
					"AgAAAG8iAQAAAAAAcCIBAAAAAAAAAAAAcCIBAAAAAABxIgEAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABvIgEAAAAAAG8iAQAAAAAAAAAAAAAA8L8"
				],
				[
					35,
					1,
					"left_delete",
					null,
					"AQAAAHAiAQAAAAAAcCIBAAAAAAABAAAAeA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABxIgEAAAAAAHEiAQAAAAAAAAAAAAAA8L8"
				],
				[
					36,
					1,
					"insert",
					{
						"characters": "0x"
					},
					"AgAAAHAiAQAAAAAAcSIBAAAAAAAAAAAAcSIBAAAAAAByIgEAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABwIgEAAAAAAHAiAQAAAAAAAAAAAAAA8L8"
				],
				[
					37,
					1,
					"paste_edit",
					null,
					"AQAAAHIiAQAAAAAAeCIBAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAByIgEAAAAAAHIiAQAAAAAAAAAAAAAA8L8"
				],
				[
					38,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAHgiAQAAAAAAeSIBAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB4IgEAAAAAAHgiAQAAAAAAAAAAAAAA8L8"
				],
				[
					39,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAHkiAQAAAAAAeiIBAAAAAAAAAAAAeiIBAAAAAAB7IgEAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB5IgEAAAAAAHkiAQAAAAAAAAAAAAAA8L8"
				],
				[
					42,
					6,
					"left_delete",
					null,
					"BwAAAGoiAQAAAAAAaiIBAAAAAAABAAAAZXkiAQAAAAAAeSIBAAAAAAABAAAACWkiAQAAAAAAaSIBAAAAAAABAAAAdGgiAQAAAAAAaCIBAAAAAAABAAAAYWciAQAAAAAAZyIBAAAAAAABAAAAZWYiAQAAAAAAZiIBAAAAAAABAAAAcmUiAQAAAAAAZSIBAAAAAAABAAAAYw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABrIgEAAAAAAGsiAQAAAAAAAAAAAAAA8L8"
				],
				[
					43,
					1,
					"insert",
					{
						"characters": "sharedEngine"
					},
					"DAAAAGUiAQAAAAAAZiIBAAAAAAAAAAAAZiIBAAAAAABnIgEAAAAAAAAAAABnIgEAAAAAAGgiAQAAAAAAAAAAAGgiAQAAAAAAaSIBAAAAAAAAAAAAaSIBAAAAAABqIgEAAAAAAAAAAABqIgEAAAAAAGsiAQAAAAAAAAAAAGsiAQAAAAAAbCIBAAAAAAAAAAAAbCIBAAAAAABtIgEAAAAAAAAAAABtIgEAAAAAAG4iAQAAAAAAAAAAAG4iAQAAAAAAbyIBAAAAAAAAAAAAbyIBAAAAAABwIgEAAAAAAAAAAABwIgEAAAAAAHEiAQAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABlIgEAAAAAAGUiAQAAAAAAAAAAAAAA8L8"
				],
				[
					46,
					1,
					"reindent",
					null,
					"AQAAAIAiAQAAAAAAgSIBAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACAIgEAAAAAAIAiAQAAAAAAAAAAAACAdEA"
				],
				[
					47,
					1,
					"left_delete",
					null,
					"AQAAAIAiAQAAAAAAgCIBAAAAAAABAAAACQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACBIgEAAAAAAIEiAQAAAAAAAAAAAAAA8L8"
				],
				[
					49,
					1,
					"paste_and_indent",
					null,
					"AQAAAIAiAQAAAAAAgyQBAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACAIgEAAAAAAIAiAQAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"contents": "\n#define WIN32_LEAN_AND_MEAN\n#include <Windows.h>\n#include <MinHook.h>\n#include <cocos2d.h>\n#include <cocos-ext.h>\n#include \"utils.hpp\"\n#include <gd.h>\n#include <fstream>\n#include <iostream>\n#include <string>\n#include <CCGL.h>\n#include <filesystem>\n#include <fmod.hpp>\n\nusing namespace cocos2d;\n\n#define STRINGIFY(...) #__VA_ARGS__\n\ninline void patch(void* loc, std::vector<std::uint8_t> bytes) {\n    auto size = bytes.size();\n    DWORD old_prot;\n    VirtualProtect(loc, size, PAGE_EXECUTE_READWRITE, &old_prot);\n    memcpy(loc, bytes.data(), size);\n    VirtualProtect(loc, size, old_prot, &old_prot);\n}\n\n// most of this is from\n// https://github.com/cocos2d/cocos2d-x/blob/5a25fe75cb8b26b61b14b070e757ec3b17ff7791/samples/Cpp/TestCpp/Classes/ShaderTest/ShaderTest.cpp\n\n// this is only so i can access protected members\nclass MyShaderProgram : public CCGLProgram {\npublic:\n    std::string getFragShaderLog() {\n        GLint length, written;\n        glGetShaderiv(this->m_uFragShader, GL_INFO_LOG_LENGTH, &length);\n        if (length <= 0) return \"\";\n        auto stuff = new char[length + 1];\n        glGetShaderInfoLog(this->m_uFragShader, length, &written, stuff);\n        std::string result(stuff);\n        delete[] stuff;\n        return result;\n    }\n};\n\nclass ShaderNode : public CCNode {\n    GLuint m_uniformResolution,\n        m_uniformTime,\n        m_uniformMouse,\n        m_uniformPulse1,\n        m_uniformPulse2,\n        m_uniformPulse3,\n        m_uniformFft;\n    float m_time;\n    FMOD::DSP* m_fftDsp = nullptr;\n    static constexpr int FFT_SPECTRUM_SIZE = 1024;\n    // gd cuts frequencies higher than ~16kHz, so we should too (the \"140/512\" part)\n    // we also remove the right half (by multiplying by 2), because it's a mirrored version of the left half, so we don't need that\n    // (and fmod actually removes it completely, so it's always all zeros anyway)\n    // (there are actually 513 empty bins instead of 512 but the last one gets cut off by the \"140/512\" part)\n    // i know, this is weird af\n    static constexpr int FFT_ACTUAL_SPECTRUM_SIZE = FFT_SPECTRUM_SIZE - (FFT_SPECTRUM_SIZE * 140 / 512);\n    static constexpr int FFT_WINDOW_SIZE = FFT_SPECTRUM_SIZE * 2;\n    static constexpr float FFT_UPDATE_FREQUENCY = 20.f;\n    float m_spectrum[FFT_ACTUAL_SPECTRUM_SIZE];\n    float m_oldSpectrum[FFT_ACTUAL_SPECTRUM_SIZE];\n    float m_newSpectrum[FFT_ACTUAL_SPECTRUM_SIZE];\n    float m_spectrumUpdateAccumulator;\n    CCArray* m_shaderSprites;\npublic:\n    bool init(const GLchar* vert, const std::string& frag) {\n        auto shader = new CCGLProgram;\n        static bool hasPatched = false;\n        if (!hasPatched) {\n            hasPatched = true;\n            auto addr = cast<uintptr_t>(GetProcAddress(\n                GetModuleHandleA(\"libcocos2d.dll\"), \"?compileShader@CCGLProgram@cocos2d@@AAE_NPAIIPBD@Z\"));\n            // ok so basically this patches out an abort() in compileShader\n            // because for some reason they decided to make it return false only on winRT ???\n            // and on every other platform else it aborts\n            patch(cast<void*>(addr + 0xA9), {0x90, 0x90, 0x90, 0x90, 0x90, 0x90});\n        }\n        if (!shader->initWithVertexShaderByteArray(vert, frag.c_str())) {\n            const auto error = reinterpret_cast<MyShaderProgram*>(shader)->getFragShaderLog();\n            MessageBoxA(NULL, error.c_str(), \"menu-shaders failed to load shaders\", 0);\n            return false;\n        }\n        m_shaderSprites = CCArray::create();\n        m_shaderSprites->retain();\n        if (frag.size() > 3 && frag.compare(0, 3, \"//@\") == 0) {\n            std::istringstream stream(frag);\n            stream.seekg(4);\n            std::string line;\n            std::getline(stream, line);\n            std::string::size_type pos = line.find(',');\n            const auto addSprite = [&](const std::string& name) {\n                std::cout << \"loading sprite \\\"\" << name << \"\\\"\" << std::endl;\n                auto sprite = CCSprite::create(name.c_str());\n                sprite->retain();\n                std::cout << sprite << std::endl;\n                m_shaderSprites->addObject(sprite);\n            };\n            int i = 0;\n            while (pos = line.find(','), pos != std::string::npos) {\n                auto me = line.substr(0, pos);\n                line = line.substr(pos + 1);\n                addSprite(me);\n            }\n            if (line.size()) addSprite(line);\n        }\n\n        auto engine = gd::FMODAudioEngine::sharedEngine();\n        engine->m_pSystem->createDSPByType(FMOD_DSP_TYPE_FFT, &m_fftDsp);\n        engine->m_pGlobalChannel->addDSP(1, m_fftDsp);\n        m_fftDsp->setParameterInt(FMOD_DSP_FFT_WINDOWTYPE, FMOD_DSP_FFT_WINDOW_HAMMING);\n        m_fftDsp->setParameterInt(FMOD_DSP_FFT_WINDOWSIZE, FFT_WINDOW_SIZE);\n        m_fftDsp->setActive(true);\n\n        std::memset(m_spectrum, 0, FFT_ACTUAL_SPECTRUM_SIZE * sizeof(float));\n        std::memset(m_oldSpectrum, 0, FFT_ACTUAL_SPECTRUM_SIZE * sizeof(float));\n        std::memset(m_newSpectrum, 0, FFT_ACTUAL_SPECTRUM_SIZE * sizeof(float));\n\n        shader->addAttribute(kCCAttributeNamePosition, kCCVertexAttrib_Position);\n        shader->addAttribute(kCCAttributeNameTexCoord, kCCVertexAttrib_TexCoords);\n        shader->link();\n\n        shader->updateUniforms();\n\n        m_uniformResolution = glGetUniformLocation(shader->getProgram(), \"resolution\");\n        m_uniformTime = glGetUniformLocation(shader->getProgram(), \"time\");\n        m_uniformMouse = glGetUniformLocation(shader->getProgram(), \"mouse\");\n        m_uniformPulse1 = glGetUniformLocation(shader->getProgram(), \"pulse1\");\n        m_uniformPulse2 = glGetUniformLocation(shader->getProgram(), \"pulse2\");\n        m_uniformPulse3 = glGetUniformLocation(shader->getProgram(), \"pulse3\");\n        m_uniformFft = glGetUniformLocation(shader->getProgram(), \"fft\");\n\n        for (size_t i = 0; i < m_shaderSprites->count(); ++i) {\n            auto uniform = glGetUniformLocation(shader->getProgram(), (\"sprite\" + std::to_string(i)).c_str());\n            glUniform1i(uniform, i);\n            // std::cout << \"setting some uniform\" << std::endl;\n            // auto sprite = reinterpret_cast<CCSprite*>(m_shaderSprites->objectAtIndex(i));\n            // sprite->setScale(0.3f);\n            // ccGLBindTexture2DN(sprite->getTexture()->getName(), i);\n        }\n\n        this->setShaderProgram(shader);\n\n        m_time = 0.f;\n        auto size = CCDirector::sharedDirector()->getWinSize();\n\n        shader->release();\n\n        this->scheduleUpdate();\n\n        setContentSize(size);\n        setAnchorPoint({0.5f, 0.5f});\n        return true;\n    }\n\n    ~ShaderNode() {\n        if (m_fftDsp) {\n            gd::FMODAudioEngine::sharedEngine()->m_pGlobalChannel->removeDSP(m_fftDsp);\n        }\n    }\n\n    virtual void update(float dt) {\n        m_time += dt;\n        m_spectrumUpdateAccumulator += dt;\n\n        const float speed = 1.f / FFT_UPDATE_FREQUENCY;\n        if (m_spectrumUpdateAccumulator >= speed) {\n            auto engine = gd::FMODAudioEngine::sharedEngine();\n            if (m_fftDsp) {\n                FMOD_DSP_PARAMETER_FFT* data;\n                unsigned int length;\n                m_fftDsp->getParameterData(FMOD_DSP_FFT_SPECTRUMDATA, (void**)&data, &length, nullptr, 0);\n                if (length) {\n                    for (size_t i = 0; i < min(data->length, FFT_ACTUAL_SPECTRUM_SIZE); i++) {\n                        m_oldSpectrum[i] = m_newSpectrum[i];\n                        m_newSpectrum[i] = 0.f;\n                        int n = min(data->numchannels, 2);\n                        for (size_t j = 0; j < n; ++j) {\n                            m_newSpectrum[i] += data->spectrum[j][i];\n                        }\n                        m_newSpectrum[i] /= float(n);\n                    }\n                }\n            }\n            m_spectrumUpdateAccumulator = 0.f;\n        }\n        float t = m_spectrumUpdateAccumulator * FFT_UPDATE_FREQUENCY;\n        for (int i = 0; i < FFT_ACTUAL_SPECTRUM_SIZE; i++) {\n            m_spectrum[i] = (1.f - t) * m_oldSpectrum[i] + t * m_newSpectrum[i];\n        }\n    }\n    virtual void draw() {\n        CC_NODE_DRAW_SETUP();\n\n        auto glv = CCDirector::sharedDirector()->getOpenGLView();\n        auto size = CCDirector::sharedDirector()->getWinSize();\n        auto frSize = glv->getFrameSize();\n        float w = frSize.width, h = frSize.height;\n        GLfloat vertices[12] = {0,0, w,0, w,h, 0,0, 0,h, w,h};\n\n        getShaderProgram()->setUniformLocationWith2f(m_uniformResolution, w, h);\n        const auto mousePos = glv->getMousePosition();\n        getShaderProgram()->setUniformLocationWith2f(m_uniformMouse, mousePos.x, h - mousePos.y);\n\n        for (size_t i = 0; i < m_shaderSprites->count(); ++i) {\n            auto sprite = dynamic_cast<CCSprite*>(m_shaderSprites->objectAtIndex(i));\n            if (sprite) {\n                sprite->setScale(0.3f);\n                ccGLBindTexture2DN(i, sprite->getTexture()->getName());\n            }\n        }\n\n        glUniform1f(m_uniformTime, m_time);\n\n        // thx adaf for telling me where these are\n        auto engine = gd::FMODAudioEngine::sharedEngine();\n        glUniform1f(m_uniformPulse1, engine->m_fPulse1);\n        glUniform1f(m_uniformPulse2, engine->m_fPulse2);\n        glUniform1f(m_uniformPulse3, engine->m_fPulse3);\n\n        glUniform1fv(m_uniformFft, FFT_ACTUAL_SPECTRUM_SIZE, m_spectrum);\n\n        ccGLEnableVertexAttribs(kCCVertexAttribFlag_Position);\n\n        glVertexAttribPointer(kCCVertexAttrib_Position, 2, GL_FLOAT, GL_FALSE, 0, vertices);\n\n        glDrawArrays(GL_TRIANGLES, 0, 6);\n        \n        // CC_INCREMENT_GL_DRAWS(1); // this crashes :c\n    }\n    static auto create(const GLchar* vert, const std::string& frag) {\n        auto node = new ShaderNode;\n        if (node->init(vert, frag)) {\n            node->autorelease();\n        } else {\n            CC_SAFE_DELETE(node);\n        }\n        return node;\n    }\n};\n\nstatic const auto menuShadersKey = \"menu-shader-enabled\";\nbool g_enabled = false;\n\nbool (__thiscall* MenuLayer_init)(gd::MenuLayer*);\nbool __fastcall MenuLayer_init_H(gd::MenuLayer* self){\n    g_enabled = gd::GameManager::sharedState()->getGameVariableDefault(menuShadersKey, true);\n    static bool hasPatched = false;\n    if (g_enabled && !hasPatched) {\n        // huge thanks to adaf for this!\n        // im doing the patch here instead of the dll entry thread because\n        // that could cause a crash as its in a different thread\n        patch(cast<void*>(gd::base + 0x23b56), {0x90, 0x90, 0x90, 0x90, 0x90, 0x90});\n        hasPatched = true;\n    }\n\n    if (!MenuLayer_init(self)) return false;\n    if (!g_enabled) return true;\n\n    // hm yes very safe, although i cant think of a better way\n    auto gameLayer = dynamic_cast<CCLayer*>(self->getChildren()->objectAtIndex(0));\n    if (gameLayer != nullptr) {\n        gameLayer->removeFromParentAndCleanup(true);\n        gameLayer = nullptr;\n    }\n    const auto shaderPath = CCFileUtils::sharedFileUtils()->fullPathForFilename(\"menu-shader.fsh\", false);\n    std::string shaderSource;\n    // yes im using std::filesystem just for this\n    // CCFileUtils::isFileExist is really weird and broken\n    if (std::filesystem::exists(shaderPath)) {\n        std::ifstream file;\n        file.open(shaderPath, std::ios::in);\n        // this is the best way i could find of reading an entire file\n        std::ostringstream sstr;\n        sstr << file.rdbuf();\n        shaderSource = sstr.str();\n        file.close();\n    } else {\n        // default shader is a blue swirly pattern\n        // which i made some time ago in shadertoy\n        // https://www.shadertoy.com/view/wdG3Wh\n        shaderSource = STRINGIFY(\n            uniform vec2 resolution;\n            uniform float time;\n            uniform vec2 mouse; // not used here\n\n            vec2 hash(vec2 p) {\n                p = vec2(dot(p,vec2(127.1,311.7)), dot(p,vec2(269.5,183.3)));\n                return -1.0 + 2.0*fract(sin(p)*43758.5453123);\n            }\n\n            float noise(in vec2 p) {\n                const float K1 = 0.366025404; // (sqrt(3)-1)/2;\n                const float K2 = 0.211324865; // (3-sqrt(3))/6;\n\n                vec2  i = floor( p + (p.x+p.y)*K1 );\n                vec2  a = p - i + (i.x+i.y)*K2;\n                float m = step(a.y,a.x); \n                vec2  o = vec2(m,1.0-m);\n                vec2  b = a - o + K2;\n                vec2  c = a - 1.0 + 2.0*K2;\n                vec3  h = max( 0.5-vec3(dot(a,a), dot(b,b), dot(c,c) ), 0.0 );\n                vec3  n = h*h*h*h*vec3( dot(a,hash(i+0.0)), dot(b,hash(i+o)), dot(c,hash(i+1.0)));\n                return dot(n, vec3(70.0));\n            }\n\n            void main() {\n                // mat wtf is this\n                vec2 uv = (gl_FragCoord.xy - 0.5*resolution.xy ) / resolution.y;\n    \n                uv = vec2(noise(uv+time*0.1), noise(uv+10.));\n                float d = uv.x - uv.y;\n                d *= 20.;\n                d = sin(d);\n                d = d * 0.5 + 0.5;\n                d = 1.0 - d;\n                \n                d = smoothstep(0.1, 0.1, d);\n                \n                vec3 col = vec3(mix(vec3(0.1), vec3(0.2, 0.2, 0.6), d));\n\n                gl_FragColor = vec4(col,1.0);\n            }\n        );\n    }\n    /*\n    Heres an extremely simple shader that just shows the uv,\n    while also showing all available uniforms\n    uniform vec2 resolution;\n    uniform float time;\n    uniform vec2 mouse;\n    uniform float pulse1; // i recommend this one\n    uniform float pulse2;\n    uniform float pulse3;\n    uniform float fft[744];\n    void main() {\n        vec2 uv = gl_FragCoord.xy / resolution;\n        uv.x *= resolution.x / resolution.y; // optional: fix aspect ratio\n        gl_FragColor = vec4(uv, 0.0, 1.0);\n    }\n    */\n\n    auto shader = ShaderNode::create(STRINGIFY(\n        attribute vec4 a_position;\n\n        void main() {\n            gl_Position = CC_MVPMatrix * a_position;\n        }\n    ), shaderSource);\n\n    if (shader == nullptr)\n        return true;\n\n    shader->setZOrder(-10);\n    self->addChild(shader);\n    auto size = CCDirector::sharedDirector()->getWinSize();\n    shader->setPosition(size / 2);\n    return true;\n}\n\nbool (__thiscall* MoreOptionsLayer_init)(gd::MoreOptionsLayer*);\nbool __fastcall MoreOptionsLayer_init_H(gd::MoreOptionsLayer* self) {\n    if (!MoreOptionsLayer_init(self)) return false;\n\n    self->addToggle(\"Menu shaders\", menuShadersKey, \"Enable fancy shaders on the main menu\");\n\n    return true;\n}\n\n// #define _DEBUG\n\nDWORD WINAPI my_thread(void* hModule) {\n#ifdef _DEBUG\n    AllocConsole();\n    std::ofstream conout(\"CONOUT$\", std::ios::out);\n    std::ifstream conin(\"CONIN$\", std::ios::in);\n    std::cout.rdbuf(conout.rdbuf());\n    std::cin.rdbuf(conin.rdbuf());\n#endif\n\n    MH_Initialize();\n\n    auto base = cast<uintptr_t>(GetModuleHandle(0));\n\n    MH_CreateHook(cast<void*>(base + 0x1907B0), MenuLayer_init_H, (void**)&MenuLayer_init);\n    MH_CreateHook(cast<void*>(base + 0x1DE8F0), MoreOptionsLayer_init_H, (void**)&MoreOptionsLayer_init);\n\n    MH_EnableHook(MH_ALL_HOOKS);\n\n#ifdef _DEBUG\n    std::getline(std::cin, std::string());\n\n    MH_Uninitialize();\n    conout.close();\n    conin.close();\n    FreeConsole();\n    FreeLibraryAndExitThread(cast<HMODULE>(hModule), 0);\n#endif\n    return 0;\n}\n\nBOOL APIENTRY DllMain(HMODULE hModule, DWORD ul_reason_for_call, LPVOID lpReserved) {\n    if (ul_reason_for_call == DLL_PROCESS_ATTACH)\n        CreateThread(0, 0, my_thread, hModule, 0, 0);\n    return TRUE;\n}",
			"settings":
			{
				"buffer_size": 15511,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"paste_edit",
					null,
					"AQAAAAAAAAAAAAAAlzwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "CMakeLists.txt",
			"settings":
			{
				"buffer_size": 337,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					5,
					1,
					"insert",
					{
						"characters": "\nset"
					},
					"BAAAAGQAAAAAAAAAZQAAAAAAAAAAAAAAZQAAAAAAAABmAAAAAAAAAAAAAABmAAAAAAAAAGcAAAAAAAAAAAAAAGcAAAAAAAAAaAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABkAAAAAAAAAGQAAAAAAAAAAAAAAAAA8L8"
				],
				[
					6,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAGgAAAAAAAAAagAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABoAAAAAAAAAGgAAAAAAAAAAAAAAAAA8L8"
				],
				[
					7,
					1,
					"insert",
					{
						"characters": "CACAO_COMPILE_"
					},
					"DgAAAGkAAAAAAAAAagAAAAAAAAAAAAAAagAAAAAAAABrAAAAAAAAAAAAAABrAAAAAAAAAGwAAAAAAAAAAAAAAGwAAAAAAAAAbQAAAAAAAAAAAAAAbQAAAAAAAABuAAAAAAAAAAAAAABuAAAAAAAAAG8AAAAAAAAAAAAAAG8AAAAAAAAAcAAAAAAAAAAAAAAAcAAAAAAAAABxAAAAAAAAAAAAAABxAAAAAAAAAHIAAAAAAAAAAAAAAHIAAAAAAAAAcwAAAAAAAAAAAAAAcwAAAAAAAAB0AAAAAAAAAAAAAAB0AAAAAAAAAHUAAAAAAAAAAAAAAHUAAAAAAAAAdgAAAAAAAAAAAAAAdgAAAAAAAAB3AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABpAAAAAAAAAGkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					8,
					1,
					"insert",
					{
						"characters": "STATIC"
					},
					"BgAAAHcAAAAAAAAAeAAAAAAAAAAAAAAAeAAAAAAAAAB5AAAAAAAAAAAAAAB5AAAAAAAAAHoAAAAAAAAAAAAAAHoAAAAAAAAAewAAAAAAAAAAAAAAewAAAAAAAAB8AAAAAAAAAAAAAAB8AAAAAAAAAH0AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB3AAAAAAAAAHcAAAAAAAAAAAAAAAAA8L8"
				],
				[
					9,
					1,
					"insert",
					{
						"characters": " yeah"
					},
					"BQAAAH0AAAAAAAAAfgAAAAAAAAAAAAAAfgAAAAAAAAB/AAAAAAAAAAAAAAB/AAAAAAAAAIAAAAAAAAAAAAAAAIAAAAAAAAAAgQAAAAAAAAAAAAAAgQAAAAAAAACCAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB9AAAAAAAAAH0AAAAAAAAAAAAAAAAA8L8"
				],
				[
					12,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAJ4AAAAAAAAAnwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACeAAAAAAAAAJ4AAAAAAAAAAAAAAAAA8L8"
				],
				[
					13,
					1,
					"left_delete",
					null,
					"AQAAAJ4AAAAAAAAAngAAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACfAAAAAAAAAJ8AAAAAAAAAAAAAAAAA8L8"
				],
				[
					15,
					1,
					"insert",
					{
						"characters": "\nset"
					},
					"BAAAAMQAAAAAAAAAxQAAAAAAAAAAAAAAxQAAAAAAAADGAAAAAAAAAAAAAADGAAAAAAAAAMcAAAAAAAAAAAAAAMcAAAAAAAAAyAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADEAAAAAAAAAMQAAAAAAAAAAAAAAAAAakA"
				],
				[
					16,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAMgAAAAAAAAAygAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADIAAAAAAAAAMgAAAAAAAAAAAAAAAAA8L8"
				],
				[
					17,
					1,
					"insert",
					{
						"characters": "target_include_"
					},
					"DwAAAMkAAAAAAAAAygAAAAAAAAAAAAAAygAAAAAAAADLAAAAAAAAAAAAAADLAAAAAAAAAMwAAAAAAAAAAAAAAMwAAAAAAAAAzQAAAAAAAAAAAAAAzQAAAAAAAADOAAAAAAAAAAAAAADOAAAAAAAAAM8AAAAAAAAAAAAAAM8AAAAAAAAA0AAAAAAAAAAAAAAA0AAAAAAAAADRAAAAAAAAAAAAAADRAAAAAAAAANIAAAAAAAAAAAAAANIAAAAAAAAA0wAAAAAAAAAAAAAA0wAAAAAAAADUAAAAAAAAAAAAAADUAAAAAAAAANUAAAAAAAAAAAAAANUAAAAAAAAA1gAAAAAAAAAAAAAA1gAAAAAAAADXAAAAAAAAAAAAAADXAAAAAAAAANgAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADJAAAAAAAAAMkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					18,
					1,
					"insert",
					{
						"characters": "di"
					},
					"AgAAANgAAAAAAAAA2QAAAAAAAAAAAAAA2QAAAAAAAADaAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADYAAAAAAAAANgAAAAAAAAAAAAAAAAA8L8"
				],
				[
					19,
					2,
					"left_delete",
					null,
					"AgAAANkAAAAAAAAA2QAAAAAAAAABAAAAadgAAAAAAAAA2AAAAAAAAAABAAAAZA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADaAAAAAAAAANoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					20,
					1,
					"insert",
					{
						"characters": "path"
					},
					"BAAAANgAAAAAAAAA2QAAAAAAAAAAAAAA2QAAAAAAAADaAAAAAAAAAAAAAADaAAAAAAAAANsAAAAAAAAAAAAAANsAAAAAAAAA3AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADYAAAAAAAAANgAAAAAAAAAAAAAAAAA8L8"
				],
				[
					21,
					19,
					"left_delete",
					null,
					"EwAAANsAAAAAAAAA2wAAAAAAAAABAAAAaNoAAAAAAAAA2gAAAAAAAAABAAAAdNkAAAAAAAAA2QAAAAAAAAABAAAAYdgAAAAAAAAA2AAAAAAAAAABAAAAcNcAAAAAAAAA1wAAAAAAAAABAAAAX9YAAAAAAAAA1gAAAAAAAAABAAAAZdUAAAAAAAAA1QAAAAAAAAABAAAAZNQAAAAAAAAA1AAAAAAAAAABAAAAddMAAAAAAAAA0wAAAAAAAAABAAAAbNIAAAAAAAAA0gAAAAAAAAABAAAAY9EAAAAAAAAA0QAAAAAAAAABAAAAbtAAAAAAAAAA0AAAAAAAAAABAAAAac8AAAAAAAAAzwAAAAAAAAABAAAAX84AAAAAAAAAzgAAAAAAAAABAAAAdM0AAAAAAAAAzQAAAAAAAAABAAAAZcwAAAAAAAAAzAAAAAAAAAABAAAAZ8sAAAAAAAAAywAAAAAAAAABAAAAcsoAAAAAAAAAygAAAAAAAAABAAAAYckAAAAAAAAAyQAAAAAAAAABAAAAdA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADcAAAAAAAAANwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": "CMAKE_T"
					},
					"BwAAAMkAAAAAAAAAygAAAAAAAAAAAAAAygAAAAAAAADLAAAAAAAAAAAAAADLAAAAAAAAAMwAAAAAAAAAAAAAAMwAAAAAAAAAzQAAAAAAAAAAAAAAzQAAAAAAAADOAAAAAAAAAAAAAADOAAAAAAAAAM8AAAAAAAAAAAAAAM8AAAAAAAAA0AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADJAAAAAAAAAMkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					23,
					7,
					"left_delete",
					null,
					"BwAAAM8AAAAAAAAAzwAAAAAAAAABAAAAVM4AAAAAAAAAzgAAAAAAAAABAAAAX80AAAAAAAAAzQAAAAAAAAABAAAARcwAAAAAAAAAzAAAAAAAAAABAAAAS8sAAAAAAAAAywAAAAAAAAABAAAAQcoAAAAAAAAAygAAAAAAAAABAAAATckAAAAAAAAAyQAAAAAAAAABAAAAQw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADQAAAAAAAAANAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					24,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAMgAAAAAAAAAyAAAAAAAAAABAAAAKMgAAAAAAAAAyAAAAAAAAAABAAAAKQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADJAAAAAAAAAMkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					25,
					3,
					"left_delete",
					null,
					"AwAAAMcAAAAAAAAAxwAAAAAAAAABAAAAdMYAAAAAAAAAxgAAAAAAAAABAAAAZcUAAAAAAAAAxQAAAAAAAAABAAAAcw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADIAAAAAAAAAMgAAAAAAAAAAAAAAAAA8L8"
				],
				[
					26,
					1,
					"insert",
					{
						"characters": "target_include"
					},
					"DgAAAMUAAAAAAAAAxgAAAAAAAAAAAAAAxgAAAAAAAADHAAAAAAAAAAAAAADHAAAAAAAAAMgAAAAAAAAAAAAAAMgAAAAAAAAAyQAAAAAAAAAAAAAAyQAAAAAAAADKAAAAAAAAAAAAAADKAAAAAAAAAMsAAAAAAAAAAAAAAMsAAAAAAAAAzAAAAAAAAAAAAAAAzAAAAAAAAADNAAAAAAAAAAAAAADNAAAAAAAAAM4AAAAAAAAAAAAAAM4AAAAAAAAAzwAAAAAAAAAAAAAAzwAAAAAAAADQAAAAAAAAAAAAAADQAAAAAAAAANEAAAAAAAAAAAAAANEAAAAAAAAA0gAAAAAAAAAAAAAA0gAAAAAAAADTAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADFAAAAAAAAAMUAAAAAAAAAAAAAAAAA8L8"
				],
				[
					27,
					1,
					"insert_completion",
					{
						"completion": "target_include_directories",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "target_include_directories"
					},
					"AgAAAMUAAAAAAAAAxQAAAAAAAAAOAAAAdGFyZ2V0X2luY2x1ZGXFAAAAAAAAAN8AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADTAAAAAAAAANMAAAAAAAAAAAAAAAAA8L8"
				],
				[
					28,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAN8AAAAAAAAA4QAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADfAAAAAAAAAN8AAAAAAAAAAAAAAAAA8L8"
				],
				[
					29,
					1,
					"insert",
					{
						"characters": "CacTemplate"
					},
					"CwAAAOAAAAAAAAAA4QAAAAAAAAAAAAAA4QAAAAAAAADiAAAAAAAAAAAAAADiAAAAAAAAAOMAAAAAAAAAAAAAAOMAAAAAAAAA5AAAAAAAAAAAAAAA5AAAAAAAAADlAAAAAAAAAAAAAADlAAAAAAAAAOYAAAAAAAAAAAAAAOYAAAAAAAAA5wAAAAAAAAAAAAAA5wAAAAAAAADoAAAAAAAAAAAAAADoAAAAAAAAAOkAAAAAAAAAAAAAAOkAAAAAAAAA6gAAAAAAAAAAAAAA6gAAAAAAAADrAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADgAAAAAAAAAOAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					30,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOsAAAAAAAAA7AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADrAAAAAAAAAOsAAAAAAAAAAAAAAAAA8L8"
				],
				[
					31,
					1,
					"insert",
					{
						"characters": "fmod"
					},
					"BAAAAOwAAAAAAAAA7QAAAAAAAAAAAAAA7QAAAAAAAADuAAAAAAAAAAAAAADuAAAAAAAAAO8AAAAAAAAAAAAAAO8AAAAAAAAA8AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADsAAAAAAAAAOwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					33,
					1,
					"insert",
					{
						"characters": "PUBLIC"
					},
					"BgAAAOwAAAAAAAAA7QAAAAAAAAAAAAAA7QAAAAAAAADuAAAAAAAAAAAAAADuAAAAAAAAAO8AAAAAAAAAAAAAAO8AAAAAAAAA8AAAAAAAAAAAAAAA8AAAAAAAAADxAAAAAAAAAAAAAADxAAAAAAAAAPIAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADsAAAAAAAAAOwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					34,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAPIAAAAAAAAA8wAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADyAAAAAAAAAPIAAAAAAAAAAAAAAAAA8L8"
				],
				[
					37,
					2,
					"left_delete",
					null,
					"AgAAAJwAAAAAAAAAnAAAAAAAAAABAAAAcJsAAAAAAAAAmwAAAAAAAAABAAAAcA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACdAAAAAAAAAJ0AAAAAAAAAAAAAAAAA8L8"
				],
				[
					38,
					1,
					"insert",
					{
						"characters": "m"
					},
					"AQAAAJsAAAAAAAAAnAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACbAAAAAAAAAJsAAAAAAAAAAAAAAAAA8L8"
				],
				[
					39,
					2,
					"left_delete",
					null,
					"AgAAAJsAAAAAAAAAmwAAAAAAAAABAAAAbZoAAAAAAAAAmgAAAAAAAAABAAAAYw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACcAAAAAAAAAJwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					40,
					1,
					"insert",
					{
						"characters": "mm"
					},
					"AgAAAJoAAAAAAAAAmwAAAAAAAAAAAAAAmwAAAAAAAACcAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACaAAAAAAAAAJoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					43,
					1,
					"insert",
					{
						"characters": "\ns"
					},
					"AgAAAJ0AAAAAAAAAngAAAAAAAAAAAAAAngAAAAAAAACfAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACdAAAAAAAAAJ0AAAAAAAAAAAAAAAAA8L8"
				],
				[
					44,
					1,
					"insert",
					{
						"characters": "et"
					},
					"AgAAAJ8AAAAAAAAAoAAAAAAAAAAAAAAAoAAAAAAAAAChAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACfAAAAAAAAAJ8AAAAAAAAAAAAAAAAA8L8"
				],
				[
					45,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAKEAAAAAAAAAowAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAChAAAAAAAAAKEAAAAAAAAAAAAAAAAA8L8"
				],
				[
					46,
					1,
					"insert",
					{
						"characters": "CMAKE_"
					},
					"BgAAAKIAAAAAAAAAowAAAAAAAAAAAAAAowAAAAAAAACkAAAAAAAAAAAAAACkAAAAAAAAAKUAAAAAAAAAAAAAAKUAAAAAAAAApgAAAAAAAAAAAAAApgAAAAAAAACnAAAAAAAAAAAAAACnAAAAAAAAAKgAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACiAAAAAAAAAKIAAAAAAAAAAAAAAAAA8L8"
				],
				[
					47,
					1,
					"insert",
					{
						"characters": "CXX_FLA"
					},
					"BwAAAKgAAAAAAAAAqQAAAAAAAAAAAAAAqQAAAAAAAACqAAAAAAAAAAAAAACqAAAAAAAAAKsAAAAAAAAAAAAAAKsAAAAAAAAArAAAAAAAAAAAAAAArAAAAAAAAACtAAAAAAAAAAAAAACtAAAAAAAAAK4AAAAAAAAAAAAAAK4AAAAAAAAArwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACoAAAAAAAAAKgAAAAAAAAAAAAAAAAA8L8"
				],
				[
					48,
					1,
					"insert",
					{
						"characters": "GS"
					},
					"AgAAAK8AAAAAAAAAsAAAAAAAAAAAAAAAsAAAAAAAAACxAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACvAAAAAAAAAK8AAAAAAAAAAAAAAAAA8L8"
				],
				[
					49,
					1,
					"insert",
					{
						"characters": " $"
					},
					"AgAAALEAAAAAAAAAsgAAAAAAAAAAAAAAsgAAAAAAAACzAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACxAAAAAAAAALEAAAAAAAAAAAAAAAAA8L8"
				],
				[
					50,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAALMAAAAAAAAAtQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACzAAAAAAAAALMAAAAAAAAAAAAAAAAA8L8"
				],
				[
					53,
					1,
					"insert",
					{
						"characters": "CMAKE_CXX_"
					},
					"CgAAALQAAAAAAAAAtQAAAAAAAAAAAAAAtQAAAAAAAAC2AAAAAAAAAAAAAAC2AAAAAAAAALcAAAAAAAAAAAAAALcAAAAAAAAAuAAAAAAAAAAAAAAAuAAAAAAAAAC5AAAAAAAAAAAAAAC5AAAAAAAAALoAAAAAAAAAAAAAALoAAAAAAAAAuwAAAAAAAAAAAAAAuwAAAAAAAAC8AAAAAAAAAAAAAAC8AAAAAAAAAL0AAAAAAAAAAAAAAL0AAAAAAAAAvgAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC0AAAAAAAAALQAAAAAAAAAAAAAAAAA8L8"
				],
				[
					54,
					1,
					"insert",
					{
						"characters": "FLAGS"
					},
					"BQAAAL4AAAAAAAAAvwAAAAAAAAAAAAAAvwAAAAAAAADAAAAAAAAAAAAAAADAAAAAAAAAAMEAAAAAAAAAAAAAAMEAAAAAAAAAwgAAAAAAAAAAAAAAwgAAAAAAAADDAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC+AAAAAAAAAL4AAAAAAAAAAAAAAAAA8L8"
				],
				[
					56,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMQAAAAAAAAAxQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADEAAAAAAAAAMQAAAAAAAAAAAAAAAAA8L8"
				],
				[
					57,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAMUAAAAAAAAAxwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADFAAAAAAAAAMUAAAAAAAAAAAAAAAAA8L8"
				],
				[
					58,
					1,
					"insert",
					{
						"characters": "-framework"
					},
					"CgAAAMYAAAAAAAAAxwAAAAAAAAAAAAAAxwAAAAAAAADIAAAAAAAAAAAAAADIAAAAAAAAAMkAAAAAAAAAAAAAAMkAAAAAAAAAygAAAAAAAAAAAAAAygAAAAAAAADLAAAAAAAAAAAAAADLAAAAAAAAAMwAAAAAAAAAAAAAAMwAAAAAAAAAzQAAAAAAAAAAAAAAzQAAAAAAAADOAAAAAAAAAAAAAADOAAAAAAAAAM8AAAAAAAAAAAAAAM8AAAAAAAAA0AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADGAAAAAAAAAMYAAAAAAAAAAAAAAAAA8L8"
				],
				[
					59,
					1,
					"insert",
					{
						"characters": " ocoa"
					},
					"BQAAANAAAAAAAAAA0QAAAAAAAAAAAAAA0QAAAAAAAADSAAAAAAAAAAAAAADSAAAAAAAAANMAAAAAAAAAAAAAANMAAAAAAAAA1AAAAAAAAAAAAAAA1AAAAAAAAADVAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADQAAAAAAAAANAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					60,
					4,
					"left_delete",
					null,
					"BAAAANQAAAAAAAAA1AAAAAAAAAABAAAAYdMAAAAAAAAA0wAAAAAAAAABAAAAb9IAAAAAAAAA0gAAAAAAAAABAAAAY9EAAAAAAAAA0QAAAAAAAAABAAAAbw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADVAAAAAAAAANUAAAAAAAAAAAAAAAAA8L8"
				],
				[
					61,
					1,
					"insert",
					{
						"characters": "Cocoa"
					},
					"BQAAANEAAAAAAAAA0gAAAAAAAAAAAAAA0gAAAAAAAADTAAAAAAAAAAAAAADTAAAAAAAAANQAAAAAAAAAAAAAANQAAAAAAAAA1QAAAAAAAAAAAAAA1QAAAAAAAADWAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADRAAAAAAAAANEAAAAAAAAAAAAAAAAA8L8"
				],
				[
					67,
					2,
					"left_delete",
					null,
					"AgAAAJ4AAAAAAAAAngAAAAAAAAA6AAAAc2V0KENNQUtFX0NYWF9GTEFHUyAke0NNQUtFX0NYWF9GTEFHU30gIi1mcmFtZXdvcmsgQ29jb2EiKZ0AAAAAAAAAnQAAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADYAAAAAAAAAJ4AAAAAAAAAAAAAAAAA8L8"
				],
				[
					70,
					1,
					"insert",
					{
						"characters": "\ntarget_link_"
					},
					"DQAAAMMAAAAAAAAAxAAAAAAAAAAAAAAAxAAAAAAAAADFAAAAAAAAAAAAAADFAAAAAAAAAMYAAAAAAAAAAAAAAMYAAAAAAAAAxwAAAAAAAAAAAAAAxwAAAAAAAADIAAAAAAAAAAAAAADIAAAAAAAAAMkAAAAAAAAAAAAAAMkAAAAAAAAAygAAAAAAAAAAAAAAygAAAAAAAADLAAAAAAAAAAAAAADLAAAAAAAAAMwAAAAAAAAAAAAAAMwAAAAAAAAAzQAAAAAAAAAAAAAAzQAAAAAAAADOAAAAAAAAAAAAAADOAAAAAAAAAM8AAAAAAAAAAAAAAM8AAAAAAAAA0AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADDAAAAAAAAAMMAAAAAAAAAAAAAAAAA8L8"
				],
				[
					71,
					1,
					"insert",
					{
						"characters": "libraries"
					},
					"CQAAANAAAAAAAAAA0QAAAAAAAAAAAAAA0QAAAAAAAADSAAAAAAAAAAAAAADSAAAAAAAAANMAAAAAAAAAAAAAANMAAAAAAAAA1AAAAAAAAAAAAAAA1AAAAAAAAADVAAAAAAAAAAAAAADVAAAAAAAAANYAAAAAAAAAAAAAANYAAAAAAAAA1wAAAAAAAAAAAAAA1wAAAAAAAADYAAAAAAAAAAAAAADYAAAAAAAAANkAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADQAAAAAAAAANAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					72,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAANkAAAAAAAAA2wAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADZAAAAAAAAANkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					73,
					1,
					"insert",
					{
						"characters": "CacTemplate"
					},
					"CwAAANoAAAAAAAAA2wAAAAAAAAAAAAAA2wAAAAAAAADcAAAAAAAAAAAAAADcAAAAAAAAAN0AAAAAAAAAAAAAAN0AAAAAAAAA3gAAAAAAAAAAAAAA3gAAAAAAAADfAAAAAAAAAAAAAADfAAAAAAAAAOAAAAAAAAAAAAAAAOAAAAAAAAAA4QAAAAAAAAAAAAAA4QAAAAAAAADiAAAAAAAAAAAAAADiAAAAAAAAAOMAAAAAAAAAAAAAAOMAAAAAAAAA5AAAAAAAAAAAAAAA5AAAAAAAAADlAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADaAAAAAAAAANoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					74,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOUAAAAAAAAA5gAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADlAAAAAAAAAOUAAAAAAAAAAAAAAAAA8L8"
				],
				[
					75,
					1,
					"paste_edit",
					null,
					"AQAAAOYAAAAAAAAA+AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADmAAAAAAAAAOYAAAAAAAAAAAAAAAAA8L8"
				],
				[
					78,
					1,
					"insert",
					{
						"characters": " objcshit.mm"
					},
					"DAAAAJwAAAAAAAAAnQAAAAAAAAAAAAAAnQAAAAAAAACeAAAAAAAAAAAAAACeAAAAAAAAAJ8AAAAAAAAAAAAAAJ8AAAAAAAAAoAAAAAAAAAAAAAAAoAAAAAAAAAChAAAAAAAAAAAAAAChAAAAAAAAAKIAAAAAAAAAAAAAAKIAAAAAAAAAowAAAAAAAAAAAAAAowAAAAAAAACkAAAAAAAAAAAAAACkAAAAAAAAAKUAAAAAAAAAAAAAAKUAAAAAAAAApgAAAAAAAAAAAAAApgAAAAAAAACnAAAAAAAAAAAAAACnAAAAAAAAAKgAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACcAAAAAAAAAJwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					81,
					2,
					"left_delete",
					null,
					"AgAAAAYBAAAAAAAABgEAAAAAAAAzAAAAdGFyZ2V0X2luY2x1ZGVfZGlyZWN0b3JpZXMoQ2FjVGVtcGxhdGUgUFVCTElDIGZtb2QpBQEAAAAAAAAFAQAAAAAAAAEAAAAK",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA5AQAAAAAAAAYBAAAAAAAAAAAAAAAA8L8"
				],
				[
					86,
					1,
					"left_delete",
					null,
					"AQAAAKcAAAAAAAAApwAAAAAAAAABAAAAbQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACoAAAAAAAAAKgAAAAAAAAAAAAAAAAA8L8"
				],
				[
					89,
					2,
					"left_delete",
					null,
					"AgAAAJ0AAAAAAAAAnQAAAAAAAAAKAAAAb2JqY3NoaXQubZwAAAAAAAAAnAAAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACnAAAAAAAAAJ0AAAAAAAAAAAAAAAAA8L8"
				],
				[
					91,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAMMAAAAAAAAAxAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADDAAAAAAAAAMMAAAAAAAAAAAAAAAAAaEA"
				],
				[
					92,
					1,
					"insert",
					{
						"characters": "add_target"
					},
					"CgAAAMQAAAAAAAAAxQAAAAAAAAAAAAAAxQAAAAAAAADGAAAAAAAAAAAAAADGAAAAAAAAAMcAAAAAAAAAAAAAAMcAAAAAAAAAyAAAAAAAAAAAAAAAyAAAAAAAAADJAAAAAAAAAAAAAADJAAAAAAAAAMoAAAAAAAAAAAAAAMoAAAAAAAAAywAAAAAAAAAAAAAAywAAAAAAAADMAAAAAAAAAAAAAADMAAAAAAAAAM0AAAAAAAAAAAAAAM0AAAAAAAAAzgAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADEAAAAAAAAAMQAAAAAAAAAAAAAAAAA8L8"
				],
				[
					93,
					10,
					"left_delete",
					null,
					"CgAAAM0AAAAAAAAAzQAAAAAAAAABAAAAdMwAAAAAAAAAzAAAAAAAAAABAAAAZcsAAAAAAAAAywAAAAAAAAABAAAAZ8oAAAAAAAAAygAAAAAAAAABAAAAcskAAAAAAAAAyQAAAAAAAAABAAAAYcgAAAAAAAAAyAAAAAAAAAABAAAAdMcAAAAAAAAAxwAAAAAAAAABAAAAX8YAAAAAAAAAxgAAAAAAAAABAAAAZMUAAAAAAAAAxQAAAAAAAAABAAAAZMQAAAAAAAAAxAAAAAAAAAABAAAAYQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADOAAAAAAAAAM4AAAAAAAAAAAAAAAAA8L8"
				],
				[
					94,
					1,
					"insert",
					{
						"characters": "add_library"
					},
					"CwAAAMQAAAAAAAAAxQAAAAAAAAAAAAAAxQAAAAAAAADGAAAAAAAAAAAAAADGAAAAAAAAAMcAAAAAAAAAAAAAAMcAAAAAAAAAyAAAAAAAAAAAAAAAyAAAAAAAAADJAAAAAAAAAAAAAADJAAAAAAAAAMoAAAAAAAAAAAAAAMoAAAAAAAAAywAAAAAAAAAAAAAAywAAAAAAAADMAAAAAAAAAAAAAADMAAAAAAAAAM0AAAAAAAAAAAAAAM0AAAAAAAAAzgAAAAAAAAAAAAAAzgAAAAAAAADPAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADEAAAAAAAAAMQAAAAAAAAAAAAAAAAA8L8"
				],
				[
					95,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAM8AAAAAAAAA0QAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADPAAAAAAAAAM8AAAAAAAAAAAAAAAAA8L8"
				],
				[
					96,
					1,
					"insert",
					{
						"characters": "Cac"
					},
					"AwAAANAAAAAAAAAA0QAAAAAAAAAAAAAA0QAAAAAAAADSAAAAAAAAAAAAAADSAAAAAAAAANMAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADQAAAAAAAAANAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					97,
					3,
					"left_delete",
					null,
					"AwAAANIAAAAAAAAA0gAAAAAAAAABAAAAY9EAAAAAAAAA0QAAAAAAAAABAAAAYdAAAAAAAAAA0AAAAAAAAAABAAAAQw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADTAAAAAAAAANMAAAAAAAAAAAAAAAAA8L8"
				],
				[
					98,
					1,
					"insert",
					{
						"characters": "Sex"
					},
					"AwAAANAAAAAAAAAA0QAAAAAAAAAAAAAA0QAAAAAAAADSAAAAAAAAAAAAAADSAAAAAAAAANMAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADQAAAAAAAAANAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					99,
					1,
					"insert",
					{
						"characters": " STATI"
					},
					"BgAAANMAAAAAAAAA1AAAAAAAAAAAAAAA1AAAAAAAAADVAAAAAAAAAAAAAADVAAAAAAAAANYAAAAAAAAAAAAAANYAAAAAAAAA1wAAAAAAAAAAAAAA1wAAAAAAAADYAAAAAAAAAAAAAADYAAAAAAAAANkAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADTAAAAAAAAANMAAAAAAAAAAAAAAAAA8L8"
				],
				[
					100,
					1,
					"insert",
					{
						"characters": "C"
					},
					"AQAAANkAAAAAAAAA2gAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADZAAAAAAAAANkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					101,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANoAAAAAAAAA2wAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADaAAAAAAAAANoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					102,
					1,
					"insert",
					{
						"characters": "objcshit.m"
					},
					"CgAAANsAAAAAAAAA3AAAAAAAAAAAAAAA3AAAAAAAAADdAAAAAAAAAAAAAADdAAAAAAAAAN4AAAAAAAAAAAAAAN4AAAAAAAAA3wAAAAAAAAAAAAAA3wAAAAAAAADgAAAAAAAAAAAAAADgAAAAAAAAAOEAAAAAAAAAAAAAAOEAAAAAAAAA4gAAAAAAAAAAAAAA4gAAAAAAAADjAAAAAAAAAAAAAADjAAAAAAAAAOQAAAAAAAAAAAAAAOQAAAAAAAAA5QAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADbAAAAAAAAANsAAAAAAAAAAAAAAAAA8L8"
				],
				[
					104,
					1,
					"insert",
					{
						"characters": "\nset_"
					},
					"BQAAAOYAAAAAAAAA5wAAAAAAAAAAAAAA5wAAAAAAAADoAAAAAAAAAAAAAADoAAAAAAAAAOkAAAAAAAAAAAAAAOkAAAAAAAAA6gAAAAAAAAAAAAAA6gAAAAAAAADrAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADmAAAAAAAAAOYAAAAAAAAAAAAAAAAA8L8"
				],
				[
					105,
					4,
					"left_delete",
					null,
					"BAAAAOoAAAAAAAAA6gAAAAAAAAABAAAAX+kAAAAAAAAA6QAAAAAAAAABAAAAdOgAAAAAAAAA6AAAAAAAAAABAAAAZecAAAAAAAAA5wAAAAAAAAABAAAAcw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADrAAAAAAAAAOsAAAAAAAAAAAAAAAAA8L8"
				],
				[
					106,
					1,
					"left_delete",
					null,
					"AQAAAOYAAAAAAAAA5gAAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADnAAAAAAAAAOcAAAAAAAAAAAAAAAAA8L8"
				],
				[
					109,
					1,
					"left_delete",
					null,
					"AQAAAP0AAAAAAAAA/QAAAAAAAAALAAAAQ2FjVGVtcGxhdGU",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAIAQAAAAAAAP0AAAAAAAAAAAAAAAAA8L8"
				],
				[
					110,
					1,
					"insert",
					{
						"characters": "Sex"
					},
					"AwAAAP0AAAAAAAAA/gAAAAAAAAAAAAAA/gAAAAAAAAD/AAAAAAAAAAAAAAD/AAAAAAAAAAABAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD9AAAAAAAAAP0AAAAAAAAAAAAAAAAA8L8"
				],
				[
					113,
					1,
					"insert",
					{
						"characters": "\n\n\ntarget_lin"
					},
					"DQAAABQBAAAAAAAAFQEAAAAAAAAAAAAAFQEAAAAAAAAWAQAAAAAAAAAAAAAWAQAAAAAAABcBAAAAAAAAAAAAABcBAAAAAAAAGAEAAAAAAAAAAAAAGAEAAAAAAAAZAQAAAAAAAAAAAAAZAQAAAAAAABoBAAAAAAAAAAAAABoBAAAAAAAAGwEAAAAAAAAAAAAAGwEAAAAAAAAcAQAAAAAAAAAAAAAcAQAAAAAAAB0BAAAAAAAAAAAAAB0BAAAAAAAAHgEAAAAAAAAAAAAAHgEAAAAAAAAfAQAAAAAAAAAAAAAfAQAAAAAAACABAAAAAAAAAAAAACABAAAAAAAAIQEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAUAQAAAAAAABQBAAAAAAAAAAAAAAAAakA"
				],
				[
					114,
					1,
					"insert",
					{
						"characters": "k_libraries"
					},
					"CwAAACEBAAAAAAAAIgEAAAAAAAAAAAAAIgEAAAAAAAAjAQAAAAAAAAAAAAAjAQAAAAAAACQBAAAAAAAAAAAAACQBAAAAAAAAJQEAAAAAAAAAAAAAJQEAAAAAAAAmAQAAAAAAAAAAAAAmAQAAAAAAACcBAAAAAAAAAAAAACcBAAAAAAAAKAEAAAAAAAAAAAAAKAEAAAAAAAApAQAAAAAAAAAAAAApAQAAAAAAACoBAAAAAAAAAAAAACoBAAAAAAAAKwEAAAAAAAAAAAAAKwEAAAAAAAAsAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAhAQAAAAAAACEBAAAAAAAAAAAAAAAA8L8"
				],
				[
					115,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAACwBAAAAAAAALgEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAsAQAAAAAAACwBAAAAAAAAAAAAAAAA8L8"
				],
				[
					116,
					1,
					"insert",
					{
						"characters": "CacTemplate"
					},
					"CwAAAC0BAAAAAAAALgEAAAAAAAAAAAAALgEAAAAAAAAvAQAAAAAAAAAAAAAvAQAAAAAAADABAAAAAAAAAAAAADABAAAAAAAAMQEAAAAAAAAAAAAAMQEAAAAAAAAyAQAAAAAAAAAAAAAyAQAAAAAAADMBAAAAAAAAAAAAADMBAAAAAAAANAEAAAAAAAAAAAAANAEAAAAAAAA1AQAAAAAAAAAAAAA1AQAAAAAAADYBAAAAAAAAAAAAADYBAAAAAAAANwEAAAAAAAAAAAAANwEAAAAAAAA4AQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAtAQAAAAAAAC0BAAAAAAAAAAAAAAAA8L8"
				],
				[
					117,
					1,
					"insert",
					{
						"characters": " Sex"
					},
					"BAAAADgBAAAAAAAAOQEAAAAAAAAAAAAAOQEAAAAAAAA6AQAAAAAAAAAAAAA6AQAAAAAAADsBAAAAAAAAAAAAADsBAAAAAAAAPAEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA4AQAAAAAAADgBAAAAAAAAAAAAAAAA8L8"
				],
				[
					125,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADwBAAAAAAAAPQEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA8AQAAAAAAADwBAAAAAAAAAAAAAAAA8L8"
				],
				[
					127,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAD0BAAAAAAAAPwEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA9AQAAAAAAAD0BAAAAAAAAAAAAAAAA8L8"
				],
				[
					128,
					1,
					"paste_edit",
					null,
					"AQAAAD4BAAAAAAAATwEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA+AQAAAAAAAD4BAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "Cacao/base/HeaderBase.hpp",
			"settings":
			{
				"buffer_size": 3364,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"insert",
					{
						"characters": "\n#inckud"
					},
					"CAAAALEAAAAAAAAAsgAAAAAAAAAAAAAAsgAAAAAAAACzAAAAAAAAAAAAAACzAAAAAAAAALQAAAAAAAAAAAAAALQAAAAAAAAAtQAAAAAAAAAAAAAAtQAAAAAAAAC2AAAAAAAAAAAAAAC2AAAAAAAAALcAAAAAAAAAAAAAALcAAAAAAAAAuAAAAAAAAAAAAAAAuAAAAAAAAAC5AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACxAAAAAAAAALEAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4,
					1,
					"insert",
					{
						"characters": "e"
					},
					"AQAAALkAAAAAAAAAugAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC5AAAAAAAAALkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					5,
					4,
					"left_delete",
					null,
					"BAAAALkAAAAAAAAAuQAAAAAAAAABAAAAZbgAAAAAAAAAuAAAAAAAAAABAAAAZLcAAAAAAAAAtwAAAAAAAAABAAAAdbYAAAAAAAAAtgAAAAAAAAABAAAAaw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC6AAAAAAAAALoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					6,
					1,
					"insert",
					{
						"characters": "lude"
					},
					"BAAAALYAAAAAAAAAtwAAAAAAAAAAAAAAtwAAAAAAAAC4AAAAAAAAAAAAAAC4AAAAAAAAALkAAAAAAAAAAAAAALkAAAAAAAAAugAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC2AAAAAAAAALYAAAAAAAAAAAAAAAAA8L8"
				],
				[
					7,
					1,
					"insert",
					{
						"characters": " fmod>"
					},
					"BgAAALoAAAAAAAAAuwAAAAAAAAAAAAAAuwAAAAAAAAC8AAAAAAAAAAAAAAC8AAAAAAAAAL0AAAAAAAAAAAAAAL0AAAAAAAAAvgAAAAAAAAAAAAAAvgAAAAAAAAC/AAAAAAAAAAAAAAC/AAAAAAAAAMAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC6AAAAAAAAALoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					10,
					1,
					"insert",
					{
						"characters": "<"
					},
					"AQAAALsAAAAAAAAAvAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC7AAAAAAAAALsAAAAAAAAAAAAAAAAA8L8"
				],
				[
					13,
					1,
					"insert",
					{
						"characters": ".hpp"
					},
					"BAAAAMAAAAAAAAAAwQAAAAAAAAAAAAAAwQAAAAAAAADCAAAAAAAAAAAAAADCAAAAAAAAAMMAAAAAAAAAAAAAAMMAAAAAAAAAxAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADAAAAAAAAAAMAAAAAAAAAAAAAAAAAA8L8"
				]
			]
		}
	],
	"build_system": "menu_shaders (OSX)",
	"build_system_choices":
	[
		[
			[
				[
					"menu_shaders (OSX)",
					""
				],
				[
					"menu_shaders (OSX)",
					"clean"
				],
				[
					"menu_shaders (OSX)",
					"rebuild_cache"
				],
				[
					"menu_shaders (OSX)",
					"Gen"
				],
				[
					"menu_shaders (OSX)",
					"Inject"
				],
				[
					"menu_shaders (OSX)",
					"CacTemplate"
				],
				[
					"menu_shaders (OSX)",
					"Cacao"
				],
				[
					"menu_shaders (OSX)",
					"Core"
				],
				[
					"menu_shaders (OSX)",
					"LilacHook"
				],
				[
					"menu_shaders (OSX)",
					"main.o"
				],
				[
					"menu_shaders (OSX)",
					"main.i"
				],
				[
					"menu_shaders (OSX)",
					"main.s"
				]
			],
			[
				"menu_shaders (OSX)",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"osx",
				"Build With: menu_shaders (OSX)"
			],
			[
				"c+",
				"Set Syntax: C++"
			],
			[
				"markdown",
				"Set Syntax: Markdown"
			],
			[
				"install",
				"Build With: itest (OSX) - install"
			],
			[
				"word",
				"LaTeXWordCount: Word Count"
			],
			[
				"x86",
				"Set Syntax: Assembly x86 (NASM)"
			],
			[
				"insta",
				"Build With: itest (OSX) - install"
			],
			[
				"c++",
				"Set Syntax: C++"
			],
			[
				"test",
				"Build With: test (OSX)"
			],
			[
				"bash",
				"Set Syntax: Bash"
			],
			[
				"list all",
				"Rust: List All Messages"
			],
			[
				"list",
				"Rust: List All Messages"
			],
			[
				"message",
				"Rust: List All Messages"
			],
			[
				"list all mess",
				"Rust: List All Messages"
			],
			[
				"list all messages",
				"Rust: List All Messages"
			],
			[
				"messag",
				"Rust: List All Messages"
			],
			[
				"inject",
				"Build With: cross (OSX) - Inject"
			],
			[
				"inej",
				"Build With: cross (OSX) - Inject"
			],
			[
				"injec",
				"Build With: cross (OSX) - Inject"
			],
			[
				"at&t",
				"Set Syntax: GAS/AT&T x86/x64"
			],
			[
				"disable",
				"Package Control: Disable Package"
			],
			[
				"color highlight",
				"Color Highlight: Disable Color Highlighting"
			],
			[
				"colorsublime",
				"Colorsublime: Uninstall Theme"
			],
			[
				"color",
				"Color Highlight: Reset"
			],
			[
				"hopp",
				"Set Syntax: Hopper Pseudocode"
			],
			[
				"hopper",
				"Set Syntax: Hopper Pseudocode"
			],
			[
				"flake8",
				"User: Disable Python Flake8 Lint for this file"
			],
			[
				"C++",
				"Set Syntax: C++"
			],
			[
				"python",
				"Set Syntax: Python"
			],
			[
				"comment",
				"Colored Comments: Settings"
			],
			[
				"toggle",
				"SublimeLinter: Toggle Highlights"
			],
			[
				"lint",
				"SublimeLinter: Toggle Highlights"
			],
			[
				"rich",
				"Discord Rich Presence: Connect to Discord"
			],
			[
				"word c",
				"LaTeXWordCount: Word Count"
			],
			[
				"mycy",
				"Set Syntax: MyCython"
			],
			[
				"definition",
				"Set Syntax: Sublime Text Syntax Definition (YAML)"
			],
			[
				"My",
				"Set Syntax: MyCython"
			],
			[
				"sublime text",
				"Set Syntax: Sublime Text Syntax Definition (YAML)"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"flake",
				"User: Disable Python Flake8 Lint for this file"
			],
			[
				"lsp",
				"LSP: Enable Language Server in Project"
			],
			[
				"spwn",
				"Set Syntax: SPWN"
			],
			[
				"markdo",
				"MarkdownLivePreview: Open Preview"
			],
			[
				"terminal",
				"Terminal View: Open Bash Terminal"
			],
			[
				"snippet",
				"Snippet: std::vector"
			],
			[
				"snippets",
				"Snippet: std::vector"
			],
			[
				"build",
				"Build With: C++ Single File - Run"
			],
			[
				"wo",
				"LaTeXWordCount: Word Count"
			],
			[
				"toggle high",
				"SublimeLinter: Toggle Highlights"
			],
			[
				"enable",
				"Color Highlight: Enable Color Highlighting"
			],
			[
				"color high",
				"Color Highlight: Disable Color Highlighting"
			],
			[
				"toggle lint",
				"SublimeLinter: Toggle Highlights"
			],
			[
				"toggle ",
				"SublimeLinter: Toggle Highlights"
			],
			[
				"git",
				"GitHub Flavored Markdown: Preview"
			],
			[
				"github",
				"GitHub Flavored Markdown: Preview"
			],
			[
				"update",
				"Package Control: Upgrade/Overwrite All Packages"
			],
			[
				"latex",
				"LaTeXWordCount: Word Count"
			],
			[
				"messa",
				"Rust: List All Messages"
			],
			[
				"toggle syn",
				"Rust: Toggle Syntax Checking"
			],
			[
				"rust syntax",
				"Rust: Toggle Syntax Checking"
			],
			[
				"rust",
				"Rust: Toggle Syntax Checking"
			],
			[
				"channelre",
				"ChannelRepositoryTools: Test Default Channel"
			],
			[
				"INSTALL",
				"Package Control: Install Package"
			],
			[
				"Snippet: ",
				"Licence Snippet: MIT Licence [Header] [Full Text]"
			],
			[
				"new raw",
				"PackageDev: New Raw Snippet"
			],
			[
				"color scheme",
				"UI: Select Color Scheme"
			],
			[
				"check",
				"Rust: Toggle Syntax Checking"
			],
			[
				"ansi",
				"Set Syntax: ANSI"
			],
			[
				"set syntax:rust",
				"Set Syntax: Rust Enhanced"
			],
			[
				"",
				"Build With: RustEnhanced - Script"
			],
			[
				"script",
				"Build With: RustEnhanced - Script"
			],
			[
				"configu",
				"Rust: Configure Cargo Build"
			],
			[
				"set syntax: spawn",
				"Set Syntax: Spawn"
			],
			[
				"sort",
				"Python Imports Sorter: sort imports"
			],
			[
				"pyt",
				"Python Imports Sorter: sort imports"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/jakrillis/projects/gdmods/menu_shaders",
		"/Users/jakrillis/projects/gdmods/menu_shaders/Cacao",
		"/Users/jakrillis/projects/gdmods/menu_shaders/Cacao/base"
	],
	"file_history":
	[
		"/Users/jakrillis/projects/cacao/Source/Cacao/fmod/fmod.lib",
		"/Users/jakrillis/projects/gdmods/menu_shaders/Cacao/cocos/cocos2dx/platform/CCEGLViewProtocol.h",
		"/Users/jakrillis/projects/gdmods/menu_shaders/Cacao/cocos/cocos2dx/platform/mac/EAGLView.h",
		"/Users/jakrillis/projects/gdmods/menu_shaders/Cacao/cocos/cocos2dx/platform/mac/CCEGLView.mm",
		"/Users/jakrillis/projects/gdmods/menu_shaders/Cacao/cocos/cocos2dx/platform/win32/CCEGLView.h",
		"/Users/jakrillis/projects/gdmods/menu_shaders/Cacao/cocos/cocos2dx/platform/android/CCEGLView.h",
		"/Users/jakrillis/projects/gdmods/menu_shaders/Cacao/cocos/cocos2dx/platform/CCFileUtils.h",
		"/Users/jakrillis/genbook",
		"/Users/jakrillis/projects/cacparse/test.cpp",
		"/Users/jakrillis/projects/cacparse/ftest.hpp",
		"/Users/jakrillis/projects/cacparse/lex.hpp",
		"/Users/jakrillis/projects/cacparse/ftest2.hpp",
		"/Users/jakrillis/projects/cacparse/ast.hpp",
		"/Users/jakrillis/projects/ios/itest/Cacao/Source.cpp",
		"/Users/jakrillis/projects/ios/itest/Cacao/cmake/CacaoRoot.cmake",
		"/Users/jakrillis/projects/ios/itest/CMakeLists.txt",
		"/Users/jakrillis/projects/ios/itest/Cacao/gen/data/GeometryDash.mm",
		"/Users/jakrillis/projects/ios/itest/main.mm",
		"/Users/jakrillis/projects/ios/itest/Cacao/CMakeLists.txt",
		"/Users/jakrillis/projects/ios/itest/Cacao/cmake/CacaoiOS.cmake",
		"/Users/jakrillis/projects/ios/itest/Cacao/gen/data/Cocos2d.mm",
		"/Users/jakrillis/projects/gdmods/gdstdlib/research.txt",
		"/Users/jakrillis/vta.py",
		"/Users/jakrillis/projects/ios/itest/Cacao/hook/lilac-core/src/impl/lilac_hook_impl.cpp",
		"/Users/jakrillis/projects/ios/itest/Cacao/hook/lilac-core/src/impl/lilac_hook_impl.hpp",
		"/Users/jakrillis/projects/ios/itest/Cacao/hook/lilac-core/src/impl/lilac_hook_ios.cpp",
		"/Users/jakrillis/projects/ios/itest/Cacao/hook/Core.cpp",
		"/Users/jakrillis/projects/ios/itest/Cacao/hook/Core.hpp",
		"/Users/jakrillis/t.py",
		"/Users/jakrillis/projects/ios/itest/notify.m",
		"/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS13.2.sdk/usr/include/sys/cdefs.h",
		"/Users/jakrillis/projects/ios/itest/test.m",
		"/Users/jakrillis/projects/ios/itest/control",
		"/Users/jakrillis/.Trash/d2/GeometryDash.mm",
		"/Users/jakrillis/.Trash/d2/Cocos2d.mm",
		"/Users/jakrillis/projects/ios/itest/Cacao/base/FunctionBase.hpp",
		"/Users/jakrillis/projects/ios/ioscac/.gitmodules",
		"/Users/jakrillis/projects/ios/ioscac/.git/config",
		"/Users/jakrillis/projects/ios/CacaoSDK/.gitmodules",
		"/Users/jakrillis/projects/ios/CacaoSDK/.git/config",
		"/Users/jakrillis/Downloads/text-67604AE4D349-1.txt",
		"/Users/jakrillis/projects/ios/ioscac/Template/control",
		"/Users/jakrillis/projects/ios/ftest/main.cpp",
		"/Users/jakrillis/projects/ios/ftest/control",
		"/Users/jakrillis/projects/ios/ftest/Cacao/pkg/iOS.py",
		"/Users/jakrillis/projects/ios/test/build/packages/out/DEBIAN/control",
		"/Users/jakrillis/projects/ios/test/build/ios_package/tmp/DEBIAN/control",
		"/Users/jakrillis/projects/ios/gdmodtest/packages/Library/MobileSubstrate/DynamicLibraries/GdModTest.plist",
		"/Users/jakrillis/projects/ios/gdmodtest/packages/DEBIAN/control",
		"/Users/jakrillis/projects/ios/test/build/packages/DEBIAN/md5sums",
		"/Users/jakrillis/projects/ios/ioscac/create",
		"/Users/jakrillis/projects/ios/test/Cacao/cocos/cocos2dx/platform/CCApplicationProtocol.h",
		"/Users/jakrillis/projects/ios/test/Cacao/Interface.hpp",
		"/Users/jakrillis/projects/ios/test/main.cpp",
		"/Users/jakrillis/projects/ios/test/Cacao/CMakeLists.txt",
		"/Users/jakrillis/projects/ios/test/Cacao/gen/Header.py",
		"/Users/jakrillis/projects/ios/test/Cacao/gen/Interface.py",
		"/Users/jakrillis/projects/ios/test/Cacao/gen/data/GeometryDash.mm",
		"/Users/jakrillis/projects/ios/test/Cacao/gen/data/Cocos2d.mm",
		"/Users/jakrillis/projects/ios/test/Cacao/hook/lilac-core/src/CMakeLists.txt",
		"/Users/jakrillis/projects/ios/test/Cacao/base/PlatformBase.hpp",
		"/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS.sdk/usr/lib/libc++.tbd",
		"/Users/jakrillis/projects/cacao/template/Cacao/cmakelists.txt",
		"/Users/jakrillis/projects/ios/test/Cacao/cmake/CacaoRoot.cmake",
		"/Users/jakrillis/projects/ios/test/Cacao/cmake/CacaoiOS.cmake",
		"/Users/jakrillis/projects/ios/test/CMakeLists.txt",
		"/Users/jakrillis/projects/ios/test/Cacao/cocos/cocos2dx/robtop/glfw/glfw3.h",
		"/Users/jakrillis/projects/ios/test/Cacao/base/InterfaceBase.hpp",
		"/Users/jakrillis/projects/ios/ioscac/Source/Cacao/cmake/CacaoiOS.cmake",
		"/Users/jakrillis/projects/ios/test/Cacao/base/HeaderBase.hpp",
		"/Users/jakrillis/projects/ios/test/Cacao/cmake/CacaoMac.cmake",
		"/Users/jakrillis/projects/ios/test/Cacao/cmake/CacaoWin32.cmake",
		"/Users/jakrillis/t.c",
		"/Users/jakrillis/projects/ios/test/Cacao/hook/lilac-core/src/impl/lilac_hook_impl.hpp",
		"/Users/jakrillis/projects/ios/ioscac/Source/Cacao/hook/lilac-core/src/impl/lilac_hook_ios.cpp",
		"/Users/jakrillis/projects/ios/ioscac/Source/Cacao/cocos/cocos-headers/cocos2dx/platform/mac/CCApplication.h",
		"/Users/jakrillis/projects/ios/ioscac/Source/Cacao/cocos/cocos-headers/cocos2dx/platform/ios/CCApplication.h",
		"/Users/jakrillis/projects/ios/ioscac/Source/Cacao/cocos/cocos2dx/platform/ios/CCApplication.h",
		"/Users/jakrillis/projects/cacao/template/Cacao/Include/cocos2dx/platform/mac/CCApplication.h",
		"/Users/jakrillis/projects/ios/test/Cacao/cmake/CacaoAndroid.cmake",
		"/Users/jakrillis/projects/ios/test/Cacao/cmake/CacaoMacOS.cmake",
		"/Users/jakrillis/projects/ios/test/Cacao/hook/lilac-core/src/impl/lilac_hook_macos.cpp",
		"/Users/jakrillis/projects/ios/ioscac/Source/Cacao/hook/lilac-core/src/impl/lilac_hook_ios.hpp",
		"/Users/jakrillis/projects/ios/ioscac/.git/modules/Source/Cacao/include/cocos-headers/config",
		"/Users/jakrillis/projects/ios/test/Cacao/cocos/cocos-headers/cocos2dx/robtop/glfw/glfw3.h",
		"/Users/jakrillis/projects/cacao/template/Cacao/Include/cocos2dx/platform/ios/CCApplication.h",
		"/Users/jakrillis/projects/cacao/template/Cacao/Include/cocos2dx/platform/CCApplicationProtocol.h",
		"/Users/jakrillis/projects/cacao/template/Cacao/Include/cocos2dx/platform/ios/CCApplication.mm",
		"/Users/jakrillis/projects/ios/ioscac/template/cmakelists.txt",
		"/Users/jakrillis/projects/ios/iostemp/iostemp",
		"/Users/jakrillis/projects/ios/notheos/CMakeLists.txt",
		"/Users/jakrillis/projects/SPWN-language/test/test.spwn",
		"/Users/jakrillis/projects/SPWN-language/parser/src/fmt.rs",
		"/Users/jakrillis/projects/SPWN-language/compiler/src/context.rs",
		"/Users/jakrillis/projects/SPWN-language/parser/src/ast.rs",
		"/Users/jakrillis/projects/SPWN-language/compiler/src/value_storage.rs",
		"/Users/jakrillis/projects/SPWN-language/compiler/src/globals.rs",
		"/Users/jakrillis/projects/SPWN-language/compiler/src/compiler.rs",
		"/Users/jakrillis/projects/SPWN-language/compiler/src/value.rs",
		"/Users/jakrillis/projects/SPWN-language/parser/src/parser.rs",
		"/Users/jakrillis/projects/SPWN-language/compiler/src/compiler_types.rs",
		"/Users/jakrillis/projects/SPWN-language/compiler/src/builtins.rs",
		"/Users/jakrillis/projects/acidtrip/main.cpp",
		"/Users/jakrillis/projects/SPWN-language/libraries/std/vector.spwn",
		"/Users/jakrillis/projects/SPWN-language/libraries/std/zip.spwn",
		"/Users/jakrillis/projects/SPWN-language/libraries/std/binary_counter.spwn",
		"/Users/jakrillis/projects/SPWN-language/libraries/std/string.spwn",
		"/Users/jakrillis/projects/SPWN-language/libraries/std/obj_set.spwn",
		"/Users/jakrillis/projects/SPWN-language/libraries/std/array.spwn",
		"/Users/jakrillis/projects/battery/bat.m",
		"/Users/jakrillis/projects/SPWN-language/cargo.toml",
		"/Users/jakrillis/projects/SPWN-language/compiler/cargo.toml",
		"/Users/jakrillis/projects/homebrew-spwn/Formula/spwn.rb",
		"/usr/local/Homebrew/Library/Taps/camila314/homebrew-spwn/Formula/spwn.rb",
		"/Users/jakrillis/Downloads/SPWN-language-0.7-beta/target/release/sha",
		"/Users/jakrillis/t.cpp",
		"/Users/jakrillis/t.m",
		"/Users/jakrillis/projects/modular/GameObjectController.h",
		"/Users/jakrillis/projects/modular/Cacao/include/cocos2dx/support/data_support/ccCArray.h",
		"/Users/jakrillis/projects/modular/Cacao/include/cocos2dx/cocoa/CCDictionary.h",
		"/Users/jakrillis/projects/modular/ObjectManager.cpp",
		"/Users/jakrillis/projects/modular/Cacao/include/cocos2dx/cocoa/CCObject.h",
		"/Users/jakrillis/projects/modular/Cacao/CacKitGen/asmgen.py",
		"/Users/jakrillis/projects/modular/Cacao/CacKitGen/kitgen.py",
		"/Users/jakrillis/projects/modular/Cacao/CacKitGen/headergen.py",
		"/Users/jakrillis/projects/modular/Cacao/Src/Helpers.cpp",
		"/Users/jakrillis/projects/modular/Cacao/Include/Helpers.hpp",
		"/Users/jakrillis/projects/modular/Cacao/CacKitGen/base/cackit.begin.hpp"
	],
	"find":
	{
		"height": 26.0
	},
	"find_in_files":
	{
		"height": 102.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"FMOD",
			"gd::",
			"mousePosition",
			"MenuLayer_init_H"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"file": "main.mm",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12778,
						"regions":
						{
						},
						"selection":
						[
							[
								2271,
								2271
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "Cacao/cocos/cocos2dx/shaders/CCGLProgram.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10330,
						"regions":
						{
						},
						"selection":
						[
							[
								9065,
								9072
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "objcshit.m",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 139,
						"regions":
						{
						},
						"selection":
						[
							[
								139,
								139
							]
						],
						"settings":
						{
							"syntax": "Packages/Objective-C/Objective-C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "Cacao/cmake/CacaoRoot.cmake",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2299,
						"regions":
						{
						},
						"selection":
						[
							[
								2099,
								2099
							]
						],
						"settings":
						{
							"syntax": "Packages/CMake/CMake.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "Cacao/cocos/cocos2dx/platform/mac/CCEGLView.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2239,
						"regions":
						{
						},
						"selection":
						[
							[
								2077,
								2077
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "Cacao/gen/data/GeometryDash.mm",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 75109,
						"regions":
						{
						},
						"selection":
						[
							[
								74883,
								74883
							]
						],
						"settings":
						{
							"syntax": "Packages/Objective-C/Objective-C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 6,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 15511,
						"regions":
						{
						},
						"selection":
						[
							[
								1257,
								820
							]
						],
						"settings":
						{
							"auto_name": "",
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "CMakeLists.txt",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 337,
						"regions":
						{
						},
						"selection":
						[
							[
								337,
								337
							]
						],
						"settings":
						{
							"syntax": "Packages/CMake/CMake.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "Cacao/base/HeaderBase.hpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3364,
						"regions":
						{
						},
						"selection":
						[
							[
								196,
								196
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 39.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 217.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "menu_shaders (OSX)",
	"project": "menu_shaders.sublime-project",
	"replace":
	{
		"height": 48.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"CCGL",
				"Cacao/cocos/cocos2dx/shaders/CCGLProgram.h"
			],
			[
				"CCEGLView",
				"Cacao/cocos/cocos2dx/platform/CCEGLViewProtocol.h"
			],
			[
				"EGLView",
				"Cacao/cocos/cocos2dx/platform/mac/CCEGLView.mm"
			],
			[
				"application",
				"Cacao/cocos/cocos2dx/platform/CCApplicationProtocol.h"
			],
			[
				"Applicatio",
				"Cacao/cocos/cocos2dx/platform/CCApplicationProtocol.h"
			],
			[
				"gameobject",
				"gd.h/sprite_nodes/GameObject.h"
			],
			[
				"keyboarddispat",
				"Cacao/Include/cocos2dx/keyboard_dispatcher/CCKeyboardDelegate.h"
			],
			[
				"CCK",
				"Cacao/Include/cocos2dx/keyboard_dispatcher/CCKeyboardDispatcher.h"
			],
			[
				"gameobj",
				"gd.h/sprite_nodes/GameObject.h"
			],
			[
				"texture2d",
				"Cacao/include/cocos2dx/textures/CCTexture2D.h"
			],
			[
				"ccobject",
				"Cacao/include/cocos2dx/cocoa/CCObject.h"
			],
			[
				"ccobject.h",
				"Cacao/include/cocos2dx/cocoa/CCObject.h"
			],
			[
				"array",
				"Cacao/include/cocos2dx/cocoa/CCArray.h"
			],
			[
				"spriteframecache",
				"Cacao/include/cocos2dx/sprite_nodes/CCSpriteFrameCache.h"
			],
			[
				"spriteframe",
				"Cacao/include/cocos2dx/sprite_nodes/CCSpriteFrame.h"
			],
			[
				"texture.h",
				"cocos-headers/cocos2dx/textures/CCTexture2D.h"
			],
			[
				"Image.",
				"Cacao/include/cocos2dx/platform/CCImage.h"
			],
			[
				"dicctionary",
				"Cacao/include/cocos2dx/cocoa/CCDictionary.h"
			],
			[
				"gam",
				"gd.h/sprite_nodes/GameObject.h"
			],
			[
				"Action",
				"cocos-headers/cocos2dx/actions/CCActionEase.h"
			],
			[
				"CCAction",
				"cocos-headers/cocos2dx/actions/CCAction.h"
			],
			[
				"CCActionInterval",
				"cocos-headers/cocos2dx/actions/CCActionInterval.h"
			],
			[
				"GJBase",
				"gd.h/layers_scenes_transitions_nodes/GJBaseGameLayer.h"
			],
			[
				"CCActionInstant",
				"cocos-headers/cocos2dx/actions/CCActionInstant.h"
			],
			[
				"CCActionObject",
				"Cacao/include/cocos2dext/CocoStudio/Action/CCActionObject.h"
			],
			[
				"CCactionInter",
				"cocos-headers/cocos2dx/actions/CCActionInterval.h"
			],
			[
				"ccgeome",
				"cocos-headers/cocos2dx/cocoa/CCGeometry.h"
			],
			[
				"CCCircle",
				"gd.h/actions/CCCircleWave.h"
			],
			[
				"CCActionInter",
				"cocos-headers/cocos2dx/actions/CCActionInterval.h"
			],
			[
				"ccTypse",
				"Cacao/include/cocos2dx/include/ccTypes.h"
			],
			[
				"CCSprite",
				"Cacao/include/cocos2dx/sprite_nodes/CCSprite.h"
			],
			[
				"GameObject",
				"gd.h/sprite_nodes/GameObject.h"
			],
			[
				"CCSpritePlus",
				"gd.h/sprite_nodes/CCSpritePlus.h"
			],
			[
				"CCGeometry",
				"Cacao/include/cocos2dx/cocoa/CCGeometry.h"
			],
			[
				"cinnamon",
				"Cacao/Auto/cinnamon.mm"
			],
			[
				"cinn",
				"Cacao/Auto/cinnamon.mm"
			],
			[
				"Playlayer",
				"gd.h/layers_scenes_transitions_nodes/PlayLayer.h"
			],
			[
				"cinnn",
				"Cacao/Auto/cinnamon.mm"
			],
			[
				"GJGameLevel",
				"gd.h/level_nodes/GJGameLevel.h"
			],
			[
				"playerobject",
				"gd.h/sprite_nodes/PlayerObject.h"
			],
			[
				"EffectGa",
				"gd.h/sprite_nodes/EffectGameObject.h"
			],
			[
				"PlayerObj",
				"gd.h/sprite_nodes/PlayerObject.h"
			],
			[
				"PlayerObjet",
				"gd.h/sprite_nodes/PlayerObject.h"
			],
			[
				"gjbase",
				"gd.h/layers_scenes_transitions_nodes/GJBaseGameLayer.h"
			],
			[
				"GJBa",
				"gd.h/layers_scenes_transitions_nodes/GJBaseGameLayer.h"
			],
			[
				"CCNode",
				"Cacao/include/cocos2dx/base_nodes/CCNode.h"
			],
			[
				"CCOmponentContainer",
				"cocos-headers/cocos2dx/support/component/CCComponentContainer.h"
			],
			[
				"CCComponent",
				"Cacao/include/cocos2dx/support/component/CCComponentContainer.h"
			],
			[
				"CCComponentContainer",
				"Cacao/include/cocos2dx/support/component/CCComponentContainer.h"
			],
			[
				"GJBae",
				"gd.h/layers_scenes_transitions_nodes/GJBaseGameLayer.h"
			],
			[
				"CCSpriteBatchNode",
				"cocos-headers/cocos2dx/sprite_nodes/CCSpriteBatchNode.h"
			],
			[
				"CCSpriteFrameCache",
				"Cacao/include/cocos2dx/sprite_nodes/CCSpriteFrameCache.h"
			],
			[
				"Game",
				"gd.h/sprite_nodes/GameObject.h"
			],
			[
				"GameO",
				"gd.h/sprite_nodes/GameObject.h"
			],
			[
				"Menula",
				"crosstemplate/gd.h/layers_scenes_transitions_nodes/MenuLayer.h"
			],
			[
				"CCDrawNode",
				"Cacao/include/cocos2dx/draw_nodes/CCDrawNode.h"
			],
			[
				"CCDraw",
				"Cacao/include/cocos2dx/draw_nodes/CCDrawingPrimitives.h"
			],
			[
				"CCTouch",
				"Cacao/include/cocos2dx/touch_dispatcher/CCTouch.h"
			],
			[
				"CCPoint",
				"Cacao/include/cocos2dx/support/CCPointExtension.h"
			],
			[
				"CCGeomet",
				"Cacao/include/cocos2dx/cocoa/CCGeometry.h"
			],
			[
				"CCTouchDis",
				"Cacao/include/cocos2dx/touch_dispatcher/CCTouchDelegateProtocol.h"
			],
			[
				"CCLayer",
				"Cacao/include/cocos2dx/layers_scenes_transitions_nodes/CCLayer.h"
			],
			[
				"CCDrawPrimitives",
				"Cacao/include/cocos2dx/draw_nodes/CCDrawingPrimitives.h"
			],
			[
				"ccArray",
				"Cacao/include/cocos2dx/support/data_support/ccCArray.h"
			],
			[
				"CCArray",
				"Cacao/include/cocos2dx/cocoa/CCArray.h"
			],
			[
				"CCMenuItemSprite",
				"Cacao/include/cocos2dx/custom/Sprites/CCMenuItemSpriteExtra/CCMenuItemSpriteExtra.h"
			],
			[
				"CCNode.h",
				"Cacao/include/cocos2dx/base_nodes/CCNode.h"
			],
			[
				"cctypes",
				"Cacao/include/cocos2dx/include/ccTypes.h"
			],
			[
				"CCLabelBMFont",
				"Cacao/include/cocos2dx/label_nodes/CCLabelBMFont.h"
			],
			[
				"CCNode.",
				"Cacao/include/cocos2dx/base_nodes/CCNode.h"
			],
			[
				"CCMenuI",
				"Cacao/include/cocos2dx/custom/Sprites/CCMenuItemSpriteExtra/CCMenuItemSpriteExtra.h"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 157.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
